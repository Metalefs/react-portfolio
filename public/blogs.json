{"status":"ok","feed":{"url":"https://medium.com/feed/@@jackson.pires.rm","title":"Stories by Jackson Pires Ramalho on Medium","link":"https://medium.com/@jackson.pires.rm?source=rss-2b66cd090f51------2","author":"","description":"Stories by Jackson Pires Ramalho on Medium","image":"https://cdn-images-1.medium.com/fit/c/150/150/1*51SZpeXXSjd-PAWJSM5a-g.jpeg"},"items":[{"title":"Utilize o pacote @metalefs/ngx-codemirror-directive para inserir palavras costumizadas no\u2026","pubDate":"2022-05-08 03:39:32","link":"https://medium.com/@jackson.pires.rm/utilize-o-pacote-metalefs-ngx-codemirror-directive-para-inserir-palavras-costumizadas-no-b47ed0150059?source=rss-2b66cd090f51------2","guid":"https://medium.com/p/b47ed0150059","author":"Jackson Pires Ramalho","thumbnail":"https://cdn-images-1.medium.com/max/1024/0*dgRKIkxCqN4LvaFh.png","description":"\n<h3>Utilize o pacote @metalefs/ngx-codemirror-directive para inserir palavras costumizadas no autocomplete do CodeMirror</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*dgRKIkxCqN4LvaFh.png\"></figure><p>CodeMirror \u00e9 um editor de texto open-source em JavaScript para o browser. Ele \u00e9 especializado para edi\u00e7\u00e3o de c\u00f3digo e possui <a href=\"https://github.com/codemirror/CodeMirror/tree/master/mode\">mais de 120 modos de linguagem</a>, e possui addons que implementam funcionalidades de edi\u00e7\u00e3o mais avan\u00e7adas. Ele disponibiliza uma API bem rica e simples e um sistema de temas CSS para personaliza-lo, e tamb\u00e9m \u00e9 f\u00e1cil estend\u00ea-lo com novas funcionalidades.</p>\n<p><a href=\"https://codemirror.net/6/\">CodeMirror</a> \u00e9 geralmente uma das primeiras op\u00e7\u00f5es quando se fala de componentes de edi\u00e7\u00e3o de c\u00f3digo (open-source ou n\u00e3o) para a\u00a0web.</p>\n<p>Para o Angular, foi feito um esfor\u00e7o solit\u00e1rio pelo desenvolvedor Scott Cooper, na cria\u00e7\u00e3o do pacote <a href=\"https://github.com/scttcper/ngx-codemirror\">\u2018ngx-codemirror\u2019</a> que \u00e9 um wrapper do Codemirror para o framework. Atrav\u00e9s deste wrapper, eu desenvolvi uma funcionalidade imprescind\u00edvel para a usabilidade do componente nas solu\u00e7\u00f5es Angular, e vou mostra-la aqui.</p>\n<h4>Tranforme uma textarea comum em um editor CodeMirror com a diretiva codemirrorEditor</h4>\n<p>Com essa diretiva, voc\u00ea consegue manter todas as suas propriedades na referencia do elemento de TextArea e transforma-la em um carregador do CodeMirror no seu\u00a0projeto.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/656/1*umrkkWFdMlSg_4DuAWFPZg.gif\"></figure><h4>Instale a\u00a0diretiva</h4>\n<p>Para instalar o pacote, voc\u00ea pode usar um dos comandos\u00a0abaixo.</p>\n<pre>npm i @metalefs/ngx-codemirror-directive</pre>\n<pre>yarn add @metalefs/ngx-codemirror-directive</pre>\n<h4>Use a\u00a0diretiva</h4>\n<p>Para usar a diretiva, basta importar o modulo \u2018@metalefs/ngx-codemirror-directive\u2019</p>\n<pre>import { CodemirrorModule } from '@metalefs/ngx-codemirror-directive';</pre>\n<p>Ap\u00f3s importar o m\u00f3dulo, voc\u00ea pode us\u00e1-lo em qualquer elemento textarea, como no exemplo\u00a0abaixo:</p>\n<a href=\"https://medium.com/media/ec4b16d685a19beb03aa582a4b39efd4/href\">https://medium.com/media/ec4b16d685a19beb03aa582a4b39efd4/href</a><h4>Use o auto-complete da\u00a0diretiva</h4>\n<p>Use o input \u2018autoCompleteWords\u2019 para inserir palavras customizadas no componente.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*z9mET023Fxelul3oGWiOhA.gif\"></figure><h4>Referencie o componente atrav\u00e9s da\u00a0diretiva</h4>\n<p>Voc\u00ea pode controlar o componente programaticamente atrav\u00e9s da referencia da diretiva utilizando o trecho\u00a0abaixo:</p>\n<a href=\"https://medium.com/media/5a7a47822cca9fe508bbee25a67be9cc/href\">https://medium.com/media/5a7a47822cca9fe508bbee25a67be9cc/href</a><p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b47ed0150059\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>Utilize o pacote @metalefs/ngx-codemirror-directive para inserir palavras costumizadas no autocomplete do CodeMirror</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*dgRKIkxCqN4LvaFh.png\"></figure><p>CodeMirror \u00e9 um editor de texto open-source em JavaScript para o browser. Ele \u00e9 especializado para edi\u00e7\u00e3o de c\u00f3digo e possui <a href=\"https://github.com/codemirror/CodeMirror/tree/master/mode\">mais de 120 modos de linguagem</a>, e possui addons que implementam funcionalidades de edi\u00e7\u00e3o mais avan\u00e7adas. Ele disponibiliza uma API bem rica e simples e um sistema de temas CSS para personaliza-lo, e tamb\u00e9m \u00e9 f\u00e1cil estend\u00ea-lo com novas funcionalidades.</p>\n<p><a href=\"https://codemirror.net/6/\">CodeMirror</a> \u00e9 geralmente uma das primeiras op\u00e7\u00f5es quando se fala de componentes de edi\u00e7\u00e3o de c\u00f3digo (open-source ou n\u00e3o) para a\u00a0web.</p>\n<p>Para o Angular, foi feito um esfor\u00e7o solit\u00e1rio pelo desenvolvedor Scott Cooper, na cria\u00e7\u00e3o do pacote <a href=\"https://github.com/scttcper/ngx-codemirror\">\u2018ngx-codemirror\u2019</a> que \u00e9 um wrapper do Codemirror para o framework. Atrav\u00e9s deste wrapper, eu desenvolvi uma funcionalidade imprescind\u00edvel para a usabilidade do componente nas solu\u00e7\u00f5es Angular, e vou mostra-la aqui.</p>\n<h4>Tranforme uma textarea comum em um editor CodeMirror com a diretiva codemirrorEditor</h4>\n<p>Com essa diretiva, voc\u00ea consegue manter todas as suas propriedades na referencia do elemento de TextArea e transforma-la em um carregador do CodeMirror no seu\u00a0projeto.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/656/1*umrkkWFdMlSg_4DuAWFPZg.gif\"></figure><h4>Instale a\u00a0diretiva</h4>\n<p>Para instalar o pacote, voc\u00ea pode usar um dos comandos\u00a0abaixo.</p>\n<pre>npm i @metalefs/ngx-codemirror-directive</pre>\n<pre>yarn add @metalefs/ngx-codemirror-directive</pre>\n<h4>Use a\u00a0diretiva</h4>\n<p>Para usar a diretiva, basta importar o modulo \u2018@metalefs/ngx-codemirror-directive\u2019</p>\n<pre>import { CodemirrorModule } from '@metalefs/ngx-codemirror-directive';</pre>\n<p>Ap\u00f3s importar o m\u00f3dulo, voc\u00ea pode us\u00e1-lo em qualquer elemento textarea, como no exemplo\u00a0abaixo:</p>\n<a href=\"https://medium.com/media/ec4b16d685a19beb03aa582a4b39efd4/href\">https://medium.com/media/ec4b16d685a19beb03aa582a4b39efd4/href</a><h4>Use o auto-complete da\u00a0diretiva</h4>\n<p>Use o input \u2018autoCompleteWords\u2019 para inserir palavras customizadas no componente.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*z9mET023Fxelul3oGWiOhA.gif\"></figure><h4>Referencie o componente atrav\u00e9s da\u00a0diretiva</h4>\n<p>Voc\u00ea pode controlar o componente programaticamente atrav\u00e9s da referencia da diretiva utilizando o trecho\u00a0abaixo:</p>\n<a href=\"https://medium.com/media/5a7a47822cca9fe508bbee25a67be9cc/href\">https://medium.com/media/5a7a47822cca9fe508bbee25a67be9cc/href</a><p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b47ed0150059\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["angular","codemirror","angular-directive","autocomplete"]},{"title":"Componente de Tabs din\u00e2micas com Angular","pubDate":"2022-05-08 02:03:33","link":"https://medium.com/@jackson.pires.rm/componente-de-tabs-din%C3%A2micas-com-angular-93f0fb465e81?source=rss-2b66cd090f51------2","guid":"https://medium.com/p/93f0fb465e81","author":"Jackson Pires Ramalho","thumbnail":"https://cdn-images-1.medium.com/max/1024/0*kll1G_PRfLYmy_hX","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*kll1G_PRfLYmy_hX\"></figure><p>Sabemos que o Angular sempre foi mais complexo do que tecnologias como React e Vue no sentido de render din\u00e2mico de componentes.</p>\n<p>Ao contr\u00e1rio do React, onde podemos simplesmente declarar componentes em vari\u00e1veis e passa-los como refer\u00eancia<a href=\"https://pt-br.reactjs.org/docs/introducing-jsx.html\"> (JSX)</a> para carrega-los, no Angular, as coisas s\u00e3o um pouco mais complicadas. N\u00e3o podemos instanciar componentes t\u00e3o facilmente, <em>ainda</em>.</p>\n<p>Felizmente essa realidade se manifesta muito raramente no desenvolvimento de aplica\u00e7\u00f5es com Angular, e como sempre, temos nossas cartas na manga (estou falando de Dynamic Component Loading)</p>\n<p>Uma das inst\u00e2ncias onde uma tecnologia como o JSX viria a calhar no desenvolvimento com Angular \u00e9 em componentes com conte\u00fado din\u00e2mico, como em Tabs e em\u00a0Modais.</p>\n<ul><li>Siga este link para ler a minha postagem sobre modais com conte\u00fado din\u00e2mico em\u00a0Angular.</li></ul>\n<h4>Utilize Dynamic Component Loading para criar um componente de tabs\u00a0din\u00e2mico</h4>\n<ul><li>\n<em>Para esse tutorial, eu considero que voc\u00ea j\u00e1 possua um projeto angular onde possa gerar um novo componente atrav\u00e9s do </em><a href=\"https://angular.io/cli\"><em>Angular\u00a0CLI</em></a><em>.</em>\n</li></ul>\n<p>Antes de tudo, criaremos os modelos que ser\u00e3o utilizados pelo componente de Abas, para que possamos padronizar o seu uso por toda a aplica\u00e7\u00e3o.</p>\n<h4>1. Crie a interface TabItem</h4>\n<p>Essa classe servir\u00e1 para transacionar os componentes em conjunto com os dados dos mesmos para que sejam utilizados no componente de Abas din\u00e2micas.</p>\n<p>Exemplo de como usaremos essa\u00a0classe:</p>\n<a href=\"https://medium.com/media/d421675b4eeb75e71d955a3961334698/href\">https://medium.com/media/d421675b4eeb75e71d955a3961334698/href</a><h4>2. Crie a classe TabComponent</h4>\n<p>Esta classe servir\u00e1 para tipar os componentes transacionados juntamente com os dados que ser\u00e3o injetados na inst\u00e2ncia dos\u00a0mesmos.</p>\n<a href=\"https://medium.com/media/f03407e62769dcb7680d3dc990ff80c0/href\">https://medium.com/media/f03407e62769dcb7680d3dc990ff80c0/href</a><h4>3. Crie o Componente principal</h4>\n<p>Vamos criar um novo componente no projeto, vamos chama-lo de DynamicTabsComponent. Voc\u00ea pode cria-lo executando o seguinte c\u00f3digo na raiz do\u00a0projeto:</p>\n<pre>ng g m shared/components/templates/dynamic-tabs &amp;&amp;<br>ng g c shared/components/templates/dynamic-tabs</pre>\n<p>Esse comando ira gerar um m\u00f3dulo chamado DynamicTabsModule, e em seguida um Componente chamado DynamicTabsComponent que ser\u00e1 inserido no\u00a0m\u00f3dulo.</p>\n<p>Ao final da execu\u00e7\u00e3o, teremos uma altera\u00e7\u00e3o semelhante a da imagem abaixo na pasta do\u00a0projeto.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/352/1*HLbWw_IOS_2FnQyc_venqQ.png\"></figure><h4>Antes de usarmos o componente</h4>\n<p>Antes de usarmos a funcionalidade de render din\u00e2mico, vamos ter que criar uma diretiva para nos auxiliar na localiza\u00e7\u00e3o da referencia do local de renderiza\u00e7\u00e3o dos templates.</p>\n<p><strong>4. Crie a diretiva HostDirective</strong></p>\n<p>Voc\u00ea pode usar o comando abaixo na raiz do projeto para gerar a diretiva.</p>\n<pre>ng g d shared/directives/host</pre>\n<p>insira o c\u00f3digo abaixo para a diretiva.</p>\n<a href=\"https://medium.com/media/6b7b4a3647c55eafc972f08487c8343e/href\">https://medium.com/media/6b7b4a3647c55eafc972f08487c8343e/href</a><h4>5. Componente de Abas Din\u00e2micas</h4>\n<p>Finalmente, ap\u00f3s a cria\u00e7\u00e3o das interfaces e da diretiva, podemos seguir para a cria\u00e7\u00e3o do componente de DynamicTabs.</p>\n<p>No HTML do componente, iremos utilizar o seguinte\u00a0c\u00f3digo:</p>\n<a href=\"https://medium.com/media/b905463a466fd20e03e56f95e5a32f9b/href\">https://medium.com/media/b905463a466fd20e03e56f95e5a32f9b/href</a><p>No scss do componente, usaremos o seguinte\u00a0estilo</p>\n<a href=\"https://medium.com/media/f4a83f2e3b2ca3156bbac03c7ee82f4a/href\">https://medium.com/media/f4a83f2e3b2ca3156bbac03c7ee82f4a/href</a><h4>C\u00f3digo do componente de Abas Din\u00e2micas</h4>\n<p>Usaremos a seguinte implementa\u00e7\u00e3o para o tratamento das abas din\u00e2micas no componente:</p>\n<a href=\"https://medium.com/media/a8eaf237f176020444dd344b3b01d097/href\">https://medium.com/media/a8eaf237f176020444dd344b3b01d097/href</a><h4>6. Servi\u00e7o do componente de abas din\u00e2micas:</h4>\n<p>Para reduzir um pouco o c\u00f3digo do componente, podemos criar um servi\u00e7o que ser\u00e1 respons\u00e1vel pelas a\u00e7\u00f5es, como a mudan\u00e7a de abas. Voc\u00ea pode cria-lo com o c\u00f3digo\u00a0abaixo:</p>\n<pre>ng g s shared/components/templates/dynamic-tabs/dynamic-tabs</pre>\n<h4>C\u00f3digo do\u00a0servi\u00e7o</h4>\n<p>Usando o servi\u00e7o, conseguimos centralizar as funcionalidades de manipula\u00e7\u00e3o dos dados das\u00a0abas.</p>\n<p><em>*Lembrando que os dados n\u00e3o persistem nos componentes, pois eles s\u00e3o destru\u00eddos ao mudar de aba, por isso o estado deve ser gerenciado no objeto de\u00a0TabItem.</em></p>\n<a href=\"https://medium.com/media/37c05b1309f65d3d3cfb26691690a3ab/href\">https://medium.com/media/37c05b1309f65d3d3cfb26691690a3ab/href</a><h4>7. Utilizando o componente</h4>\n<p>Pronto, finalmente podemos o componente gen\u00e9rico de abas din\u00e2micas e usar quantas abas quiser, e com qualquer componente, tendo o estado gerenciado externamente.</p>\n<pre>&lt;app-dynamic-tabs [tabs]=\"tabs\"&gt; &lt;/app-dynamic-tabs&gt;</pre>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=93f0fb465e81\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*kll1G_PRfLYmy_hX\"></figure><p>Sabemos que o Angular sempre foi mais complexo do que tecnologias como React e Vue no sentido de render din\u00e2mico de componentes.</p>\n<p>Ao contr\u00e1rio do React, onde podemos simplesmente declarar componentes em vari\u00e1veis e passa-los como refer\u00eancia<a href=\"https://pt-br.reactjs.org/docs/introducing-jsx.html\"> (JSX)</a> para carrega-los, no Angular, as coisas s\u00e3o um pouco mais complicadas. N\u00e3o podemos instanciar componentes t\u00e3o facilmente, <em>ainda</em>.</p>\n<p>Felizmente essa realidade se manifesta muito raramente no desenvolvimento de aplica\u00e7\u00f5es com Angular, e como sempre, temos nossas cartas na manga (estou falando de Dynamic Component Loading)</p>\n<p>Uma das inst\u00e2ncias onde uma tecnologia como o JSX viria a calhar no desenvolvimento com Angular \u00e9 em componentes com conte\u00fado din\u00e2mico, como em Tabs e em\u00a0Modais.</p>\n<ul><li>Siga este link para ler a minha postagem sobre modais com conte\u00fado din\u00e2mico em\u00a0Angular.</li></ul>\n<h4>Utilize Dynamic Component Loading para criar um componente de tabs\u00a0din\u00e2mico</h4>\n<ul><li>\n<em>Para esse tutorial, eu considero que voc\u00ea j\u00e1 possua um projeto angular onde possa gerar um novo componente atrav\u00e9s do </em><a href=\"https://angular.io/cli\"><em>Angular\u00a0CLI</em></a><em>.</em>\n</li></ul>\n<p>Antes de tudo, criaremos os modelos que ser\u00e3o utilizados pelo componente de Abas, para que possamos padronizar o seu uso por toda a aplica\u00e7\u00e3o.</p>\n<h4>1. Crie a interface TabItem</h4>\n<p>Essa classe servir\u00e1 para transacionar os componentes em conjunto com os dados dos mesmos para que sejam utilizados no componente de Abas din\u00e2micas.</p>\n<p>Exemplo de como usaremos essa\u00a0classe:</p>\n<a href=\"https://medium.com/media/d421675b4eeb75e71d955a3961334698/href\">https://medium.com/media/d421675b4eeb75e71d955a3961334698/href</a><h4>2. Crie a classe TabComponent</h4>\n<p>Esta classe servir\u00e1 para tipar os componentes transacionados juntamente com os dados que ser\u00e3o injetados na inst\u00e2ncia dos\u00a0mesmos.</p>\n<a href=\"https://medium.com/media/f03407e62769dcb7680d3dc990ff80c0/href\">https://medium.com/media/f03407e62769dcb7680d3dc990ff80c0/href</a><h4>3. Crie o Componente principal</h4>\n<p>Vamos criar um novo componente no projeto, vamos chama-lo de DynamicTabsComponent. Voc\u00ea pode cria-lo executando o seguinte c\u00f3digo na raiz do\u00a0projeto:</p>\n<pre>ng g m shared/components/templates/dynamic-tabs &amp;&amp;<br>ng g c shared/components/templates/dynamic-tabs</pre>\n<p>Esse comando ira gerar um m\u00f3dulo chamado DynamicTabsModule, e em seguida um Componente chamado DynamicTabsComponent que ser\u00e1 inserido no\u00a0m\u00f3dulo.</p>\n<p>Ao final da execu\u00e7\u00e3o, teremos uma altera\u00e7\u00e3o semelhante a da imagem abaixo na pasta do\u00a0projeto.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/352/1*HLbWw_IOS_2FnQyc_venqQ.png\"></figure><h4>Antes de usarmos o componente</h4>\n<p>Antes de usarmos a funcionalidade de render din\u00e2mico, vamos ter que criar uma diretiva para nos auxiliar na localiza\u00e7\u00e3o da referencia do local de renderiza\u00e7\u00e3o dos templates.</p>\n<p><strong>4. Crie a diretiva HostDirective</strong></p>\n<p>Voc\u00ea pode usar o comando abaixo na raiz do projeto para gerar a diretiva.</p>\n<pre>ng g d shared/directives/host</pre>\n<p>insira o c\u00f3digo abaixo para a diretiva.</p>\n<a href=\"https://medium.com/media/6b7b4a3647c55eafc972f08487c8343e/href\">https://medium.com/media/6b7b4a3647c55eafc972f08487c8343e/href</a><h4>5. Componente de Abas Din\u00e2micas</h4>\n<p>Finalmente, ap\u00f3s a cria\u00e7\u00e3o das interfaces e da diretiva, podemos seguir para a cria\u00e7\u00e3o do componente de DynamicTabs.</p>\n<p>No HTML do componente, iremos utilizar o seguinte\u00a0c\u00f3digo:</p>\n<a href=\"https://medium.com/media/b905463a466fd20e03e56f95e5a32f9b/href\">https://medium.com/media/b905463a466fd20e03e56f95e5a32f9b/href</a><p>No scss do componente, usaremos o seguinte\u00a0estilo</p>\n<a href=\"https://medium.com/media/f4a83f2e3b2ca3156bbac03c7ee82f4a/href\">https://medium.com/media/f4a83f2e3b2ca3156bbac03c7ee82f4a/href</a><h4>C\u00f3digo do componente de Abas Din\u00e2micas</h4>\n<p>Usaremos a seguinte implementa\u00e7\u00e3o para o tratamento das abas din\u00e2micas no componente:</p>\n<a href=\"https://medium.com/media/a8eaf237f176020444dd344b3b01d097/href\">https://medium.com/media/a8eaf237f176020444dd344b3b01d097/href</a><h4>6. Servi\u00e7o do componente de abas din\u00e2micas:</h4>\n<p>Para reduzir um pouco o c\u00f3digo do componente, podemos criar um servi\u00e7o que ser\u00e1 respons\u00e1vel pelas a\u00e7\u00f5es, como a mudan\u00e7a de abas. Voc\u00ea pode cria-lo com o c\u00f3digo\u00a0abaixo:</p>\n<pre>ng g s shared/components/templates/dynamic-tabs/dynamic-tabs</pre>\n<h4>C\u00f3digo do\u00a0servi\u00e7o</h4>\n<p>Usando o servi\u00e7o, conseguimos centralizar as funcionalidades de manipula\u00e7\u00e3o dos dados das\u00a0abas.</p>\n<p><em>*Lembrando que os dados n\u00e3o persistem nos componentes, pois eles s\u00e3o destru\u00eddos ao mudar de aba, por isso o estado deve ser gerenciado no objeto de\u00a0TabItem.</em></p>\n<a href=\"https://medium.com/media/37c05b1309f65d3d3cfb26691690a3ab/href\">https://medium.com/media/37c05b1309f65d3d3cfb26691690a3ab/href</a><h4>7. Utilizando o componente</h4>\n<p>Pronto, finalmente podemos o componente gen\u00e9rico de abas din\u00e2micas e usar quantas abas quiser, e com qualquer componente, tendo o estado gerenciado externamente.</p>\n<pre>&lt;app-dynamic-tabs [tabs]=\"tabs\"&gt; &lt;/app-dynamic-tabs&gt;</pre>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=93f0fb465e81\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["component-rendering","angular","dynamic-loading","creative-solutions"]},{"title":"Aplique conceitos de Atomic Design com Angular e NX","pubDate":"2022-05-08 00:39:37","link":"https://medium.com/@jackson.pires.rm/aplique-conceitos-de-atomic-design-com-angular-e-nx-41c5f519338c?source=rss-2b66cd090f51------2","guid":"https://medium.com/p/41c5f519338c","author":"Jackson Pires Ramalho","thumbnail":"https://cdn-images-1.medium.com/max/1024/0*Jg12Z3O0GjMydePM.png","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*Jg12Z3O0GjMydePM.png\"></figure><p>Como vimos no \u00faltimo post sobre <a href=\"https://medium.com/@jackson.pires.rm/desenvolva-um-design-system-com-nx-angular-storybook-95cd398a7610?source=your_stories_page-------------------------------------\">cria\u00e7\u00e3o de design system com NX + Angular e Storybook</a>, muitas vezes ficamos perdidos no labirinto de decis\u00f5es arquiteturais. A sorte \u00e9 que j\u00e1 existem v\u00e1rias solu\u00e7\u00f5es para esses problemas recorrentes de design, um deles se chama <strong>\u2018Atomic\u00a0Design\u2019.</strong></p>\n<h4>Conceito de Design\u00a0At\u00f4mico</h4>\n<p>O conceito cunhado pelo consultor e webdesigner Brad Frost \u00e9 uma abordagem sistem\u00e1tica para constru\u00e7\u00e3o de elementos de interface inspirado pela\u00a0qu\u00edmica.</p>\n<p>\u00c9 um conceito que surgiu em meados de 2013, e que tem tomado todo o cen\u00e1rio de desenvolvimento front-end. <a href=\"http://atomicdesign.bradfrost.com/\"><em>Atomic Design</em></a><em>\u200a\u2014\u200aBlog e livro\u00a0digital</em></p>\n<h4>Aplicando os conceitos na constru\u00e7\u00e3o de interfaces:</h4>\n<p>Primeiro vamos entender o que s\u00e3o cada um dos elementos no design\u00a0at\u00f4mico.</p>\n<p><strong>\u00c1tomos:</strong></p>\n<p>Os \u00e1tomos ajudam a manter a coer\u00eancia no contexto de biblioteca de\u00a0padr\u00f5es.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/501/1*-3rW8f8vUlBzt99C8NZs_g.png\"></figure><ul>\n<li>\u00c1tomos s\u00e3o os blocos de constru\u00e7\u00e3o b\u00e1sicos da\u00a0mat\u00e9ria.</li>\n<li>Aplicados a interfaces web, os \u00e1tomos s\u00e3o nossas tags HTML, como um r\u00f3tulo de formul\u00e1rio, uma entrada ou um\u00a0bot\u00e3o.</li>\n<li>Tamb\u00e9m podem incluir elementos mais abstratos, como paletas de cores, fontes e aspectos ainda mais invis\u00edveis de uma interface, como anima\u00e7\u00f5es.</li>\n</ul>\n<p><strong>Mol\u00e9culas</strong></p>\n<p>As mol\u00e9culas s\u00e3o a coluna vertebral do nosso design\u00a0system.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/798/1*lldY3LpMzlr9n8DmqZBZiw.png\"></figure><ul>\n<li>Mol\u00e9culas s\u00e3o grupos de \u00e1tomos ligados entre si e s\u00e3o as menores unidades fundamentais de uma subst\u00e2ncia.</li>\n<li>Construir mol\u00e9culas a partir de \u00e1tomos encoraja uma mentalidade de \u201cfa\u00e7a uma coisa e fa\u00e7a\u00a0bem\u201d.</li>\n<li>Como regra geral, elas s\u00e3o combina\u00e7\u00f5es relativamente simples de \u00e1tomos constru\u00eddos para reutiliza\u00e7\u00e3o.</li>\n</ul>\n<p><strong>Organismos</strong></p>\n<p>Desenvolver organismos a partir de mol\u00e9culas incentiva a cria\u00e7\u00e3o de componentes aut\u00f4nomos, port\u00e1teis e reutiliz\u00e1veis.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*DfizOKok-EoBF75c.png\"></figure><ul>\n<li>Organismos s\u00e3o grupos de mol\u00e9culas unidas para formar uma se\u00e7\u00e3o relativamente complexa e distinta de uma interface.</li>\n<li>Podemos combinar as bases (mol\u00e9culas) para formar organismos.</li>\n</ul>\n<p><strong>Templates</strong></p>\n<p>\u00c9 aqui que come\u00e7amos a ver o design se unindo e come\u00e7amos a ver coisas como o layout em\u00a0a\u00e7\u00e3o.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*Nsc-gkWGuCBzMp55.png\"></figure><ul>\n<li>Templates consistem principalmente em grupos de organismos costurados para formar\u00a0p\u00e1ginas</li>\n<li>Os templates s\u00e3o muito concretos e fornecem contexto para todas essas mol\u00e9culas e organismos relativamente abstratos. Os templates tamb\u00e9m s\u00e3o onde os clientes come\u00e7am a ver o design final no\u00a0lugar.</li>\n</ul>\n<p><strong>P\u00e1ginas</strong></p>\n<p>P\u00e1ginas s\u00e3o inst\u00e2ncias especificas de um Template.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*hxYufnLy9e6WUFtG.png\"></figure><ul>\n<li>Aqui, o conte\u00fado do espa\u00e7o reservado \u00e9 substitu\u00eddo por conte\u00fado representativo real para fornecer uma representa\u00e7\u00e3o precisa do que o usu\u00e1rio\u00a0ver\u00e1.</li>\n<li>A visualiza\u00e7\u00e3o no contexto nos permite voltar para modificar nossas mol\u00e9culas, organismos e modelos para melhor abordar o contexto real do\u00a0design.</li>\n</ul>\n<h4>Use Atomic Design na\u00a0pr\u00e1tica</h4>\n<p>Podemos utilizar os conceitos do design at\u00f4mico e traze-los para a arquitetura das nossas solu\u00e7\u00f5es. Abaixo, temos um exemplo da estrutura de pastas de uma biblioteca de UI em Angular utilizando NX.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/516/1*spOC6TraRohkP9hcQcGVgQ.png\"></figure><h4>Organiza\u00e7\u00e3o sistem\u00e1tica dos componentes</h4>\n<p>Para que seja poss\u00edvel importar componentes isolados, cada componente ter\u00e1 <br>um m\u00f3dulo, que por fim, ser\u00e1 incluso no m\u00f3dulo do grupo respectivo (atoms, organisms, pages, templates).</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/548/1*ZXQooA1T36qaEeOSJz6cwg.png\"></figure><p>Para exportar todos os m\u00f3dulos, n\u00f3s agregaremos os grupos no m\u00f3dulo UiModule.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1017/1*RC5PpNimBZGMmvzM8cYyGQ.png\"></figure><p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=41c5f519338c\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*Jg12Z3O0GjMydePM.png\"></figure><p>Como vimos no \u00faltimo post sobre <a href=\"https://medium.com/@jackson.pires.rm/desenvolva-um-design-system-com-nx-angular-storybook-95cd398a7610?source=your_stories_page-------------------------------------\">cria\u00e7\u00e3o de design system com NX + Angular e Storybook</a>, muitas vezes ficamos perdidos no labirinto de decis\u00f5es arquiteturais. A sorte \u00e9 que j\u00e1 existem v\u00e1rias solu\u00e7\u00f5es para esses problemas recorrentes de design, um deles se chama <strong>\u2018Atomic\u00a0Design\u2019.</strong></p>\n<h4>Conceito de Design\u00a0At\u00f4mico</h4>\n<p>O conceito cunhado pelo consultor e webdesigner Brad Frost \u00e9 uma abordagem sistem\u00e1tica para constru\u00e7\u00e3o de elementos de interface inspirado pela\u00a0qu\u00edmica.</p>\n<p>\u00c9 um conceito que surgiu em meados de 2013, e que tem tomado todo o cen\u00e1rio de desenvolvimento front-end. <a href=\"http://atomicdesign.bradfrost.com/\"><em>Atomic Design</em></a><em>\u200a\u2014\u200aBlog e livro\u00a0digital</em></p>\n<h4>Aplicando os conceitos na constru\u00e7\u00e3o de interfaces:</h4>\n<p>Primeiro vamos entender o que s\u00e3o cada um dos elementos no design\u00a0at\u00f4mico.</p>\n<p><strong>\u00c1tomos:</strong></p>\n<p>Os \u00e1tomos ajudam a manter a coer\u00eancia no contexto de biblioteca de\u00a0padr\u00f5es.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/501/1*-3rW8f8vUlBzt99C8NZs_g.png\"></figure><ul>\n<li>\u00c1tomos s\u00e3o os blocos de constru\u00e7\u00e3o b\u00e1sicos da\u00a0mat\u00e9ria.</li>\n<li>Aplicados a interfaces web, os \u00e1tomos s\u00e3o nossas tags HTML, como um r\u00f3tulo de formul\u00e1rio, uma entrada ou um\u00a0bot\u00e3o.</li>\n<li>Tamb\u00e9m podem incluir elementos mais abstratos, como paletas de cores, fontes e aspectos ainda mais invis\u00edveis de uma interface, como anima\u00e7\u00f5es.</li>\n</ul>\n<p><strong>Mol\u00e9culas</strong></p>\n<p>As mol\u00e9culas s\u00e3o a coluna vertebral do nosso design\u00a0system.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/798/1*lldY3LpMzlr9n8DmqZBZiw.png\"></figure><ul>\n<li>Mol\u00e9culas s\u00e3o grupos de \u00e1tomos ligados entre si e s\u00e3o as menores unidades fundamentais de uma subst\u00e2ncia.</li>\n<li>Construir mol\u00e9culas a partir de \u00e1tomos encoraja uma mentalidade de \u201cfa\u00e7a uma coisa e fa\u00e7a\u00a0bem\u201d.</li>\n<li>Como regra geral, elas s\u00e3o combina\u00e7\u00f5es relativamente simples de \u00e1tomos constru\u00eddos para reutiliza\u00e7\u00e3o.</li>\n</ul>\n<p><strong>Organismos</strong></p>\n<p>Desenvolver organismos a partir de mol\u00e9culas incentiva a cria\u00e7\u00e3o de componentes aut\u00f4nomos, port\u00e1teis e reutiliz\u00e1veis.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*DfizOKok-EoBF75c.png\"></figure><ul>\n<li>Organismos s\u00e3o grupos de mol\u00e9culas unidas para formar uma se\u00e7\u00e3o relativamente complexa e distinta de uma interface.</li>\n<li>Podemos combinar as bases (mol\u00e9culas) para formar organismos.</li>\n</ul>\n<p><strong>Templates</strong></p>\n<p>\u00c9 aqui que come\u00e7amos a ver o design se unindo e come\u00e7amos a ver coisas como o layout em\u00a0a\u00e7\u00e3o.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*Nsc-gkWGuCBzMp55.png\"></figure><ul>\n<li>Templates consistem principalmente em grupos de organismos costurados para formar\u00a0p\u00e1ginas</li>\n<li>Os templates s\u00e3o muito concretos e fornecem contexto para todas essas mol\u00e9culas e organismos relativamente abstratos. Os templates tamb\u00e9m s\u00e3o onde os clientes come\u00e7am a ver o design final no\u00a0lugar.</li>\n</ul>\n<p><strong>P\u00e1ginas</strong></p>\n<p>P\u00e1ginas s\u00e3o inst\u00e2ncias especificas de um Template.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*hxYufnLy9e6WUFtG.png\"></figure><ul>\n<li>Aqui, o conte\u00fado do espa\u00e7o reservado \u00e9 substitu\u00eddo por conte\u00fado representativo real para fornecer uma representa\u00e7\u00e3o precisa do que o usu\u00e1rio\u00a0ver\u00e1.</li>\n<li>A visualiza\u00e7\u00e3o no contexto nos permite voltar para modificar nossas mol\u00e9culas, organismos e modelos para melhor abordar o contexto real do\u00a0design.</li>\n</ul>\n<h4>Use Atomic Design na\u00a0pr\u00e1tica</h4>\n<p>Podemos utilizar os conceitos do design at\u00f4mico e traze-los para a arquitetura das nossas solu\u00e7\u00f5es. Abaixo, temos um exemplo da estrutura de pastas de uma biblioteca de UI em Angular utilizando NX.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/516/1*spOC6TraRohkP9hcQcGVgQ.png\"></figure><h4>Organiza\u00e7\u00e3o sistem\u00e1tica dos componentes</h4>\n<p>Para que seja poss\u00edvel importar componentes isolados, cada componente ter\u00e1 <br>um m\u00f3dulo, que por fim, ser\u00e1 incluso no m\u00f3dulo do grupo respectivo (atoms, organisms, pages, templates).</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/548/1*ZXQooA1T36qaEeOSJz6cwg.png\"></figure><p>Para exportar todos os m\u00f3dulos, n\u00f3s agregaremos os grupos no m\u00f3dulo UiModule.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1017/1*RC5PpNimBZGMmvzM8cYyGQ.png\"></figure><p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=41c5f519338c\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["atomic-design","architecture","nx","design-systems"]},{"title":"Desenvolva um Design System com NX +Angular + Storybook","pubDate":"2022-05-08 00:01:51","link":"https://medium.com/@jackson.pires.rm/desenvolva-um-design-system-com-nx-angular-storybook-95cd398a7610?source=rss-2b66cd090f51------2","guid":"https://medium.com/p/95cd398a7610","author":"Jackson Pires Ramalho","thumbnail":"https://cdn-images-1.medium.com/max/800/1*z3x7AJjTSpRbQy3zKZdV4A.png","description":"\n<p>Como desenvolvedores, muitas vezes pensamos em solu\u00e7\u00f5es arquiteturais para projetos novos ou para projetos legados em que trabalhamos, que resolvam de vez um problema de <strong>repeti\u00e7\u00e3o de c\u00f3digo</strong>, e que minimize o trabalho para algo consistente, baseando-se em um sistema de design. Podemos chamar esse questionamento de <strong>\u2018Decis\u00e3o de Design de Longo e Curto\u00a0Prazo\u2019.</strong></p>\n<p>Essa decis\u00e3o geralmente gera bastante estresse no come\u00e7o de uma implementa\u00e7\u00e3o. De um lado, n\u00f3s temos agilidade com resultados de curto prazo, mas com maior risco de falhas especialmente se tratando de normaliza\u00e7\u00e3o de dados. Do outro lado, temos uma despesa maior com an\u00e1lises, gera\u00e7\u00e3o de mais c\u00f3digo e at\u00e9 de documenta\u00e7\u00f5es, por\u00e9m garantimos uma maior manutenibilidade e funcionalidade do software.</p>\n<p>Considere a <strong>biblioteca de design</strong> como uma alternativa para esse problema.</p>\n<h3>O que \u00e9 um sistema de\u00a0design</h3>\n<p>Em primeiro lugar, o que \u00e9 um sistema de design? Um sistema de design \u00e9 o conjunto de estilos, regras e componentes reutiliz\u00e1veis que uma organiza\u00e7\u00e3o ou um aplicativo usa. Brad Frost tem uma \u00f3tima defini\u00e7\u00e3o do que \u00e9 um sistema de design. Trecho dele: \u201c\u2026 um sistema de design [\u00e9] a hist\u00f3ria oficial de como sua organiza\u00e7\u00e3o projeta e constr\u00f3i produtos digitais\u201d.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*z3x7AJjTSpRbQy3zKZdV4A.png\"></figure><p>Acima est\u00e1 uma imagem da arquitetura de uma solu\u00e7\u00e3o de biblioteca de UI. Ela trabalha com o isolamento das pe\u00e7as repetidas que comp\u00f5em o sistema\u00a0final.</p>\n<p>*Para aprofundar um pouco mais na organiza\u00e7\u00e3o dos componentes das bibliotecas, d\u00ea uma olhada no meu <a href=\"https://medium.com/@jackson.pires.rm/aplique-conceitos-de-atomic-design-com-angular-e-nx-41c5f519338c?source=your_stories_page-------------------------------------\">post sobre \u2018Atomic\u00a0Design\u2019</a>.</p>\n<p><strong>Pontos chave da\u00a0solu\u00e7\u00e3o:</strong></p>\n<ol>\n<li>Desacoplar componentes e os blocos da interface.</li>\n<li>Agrupar componentes em \u2018Atomos (Indivisiveis), Mol\u00e9culas(Containeres de \u00c1tomos), Organismos(Containeres de \u00c1tomos e Mol\u00e9culas) e Templates(Containeres de Organismos)\u2019. ( \u2018Atomic\u00a0Design\u2019)</li>\n<li>Documentar o design em p\u00e1gina web. (Storybook)</li>\n<li>Publicar o design como pacote.\u00a0(NPM)</li>\n</ol>\n<h4>Implementa\u00e7\u00e3o da\u00a0solu\u00e7\u00e3o</h4>\n<p>O que \u00e9 o\u00a0NX?</p>\n<figure><img alt=\"NX Logo\" src=\"https://cdn-images-1.medium.com/max/566/1*sdZ3w1jvisQwqUxAVaw0zQ.png\"></figure><p>NX \u00e9 um sistema de compila\u00e7\u00e3o com suporte a monorepo. Ele \u00e9 um padr\u00e3o do mercado para desenvolvimento de pacotes npm. Veja mais em <a href=\"https://nx.dev/\">https://nx.dev</a>.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*JQKZktX2m4Kt0dgiOlqLtA.png\"></figure><p>No desenvolvimento da biblioteca nesse tutorial, n\u00f3s usaremos o Nx, em conjunto do Storybook e do Compodoc.</p>\n<p>Vamos ao\u00a0c\u00f3digo!</p>\n<h4>(opcional) <em>Caso n\u00e3o possua o Angular instalado</em>\n</h4>\n<p>Voc\u00ea pode instala-lo usando o seguinte comando no\u00a0terminal</p>\n<p>npm install -g <a href=\"http://twitter.com/angular/cli\">@angular/cli</a>@latest</p>\n<h4>Instalar o\u00a0Nx</h4>\n<p>Vamos agora instalar nosso gerenciador. Voc\u00ea pode instala-lo usando o seguinte comando no terminal.</p>\n<pre>npm install -g nx</pre>\n<h4>Criar um Workspace (Angular) com\u00a0NX</h4>\n<p>Para criar um workspace no NX, execute o seguinte c\u00f3digo no terminal e selecione os passos que correspondem ao seu framework e tipo de arquivo de estilo (css, less,\u00a0etc)</p>\n<pre>npx create-nx-workspace &lt;workspace&gt;<br>cd &lt;worspace&gt;</pre>\n<p>*Siga os passos marcando a op\u00e7\u00e3o que represente o framework Angular</p>\n<p><em>Substituir &lt;workspace&gt; pelo nome do seu workspace.</em></p>\n<h4>Gerar bibliotecas com\u00a0NX</h4>\n<p>Agora vamos gerar a nossa biblioteca principal, a\u00a0UI.</p>\n<p>Por brevidade, iremos criar somente a bibioteca de UI, por\u00e9m sinta-se a vontade para gerar as que precisar para o seu\u00a0projeto.</p>\n<pre>nx g <a href=\"http://twitter.com/nrwl/angular\">@nrwl/angular</a>:lib ui --buildable --publishable --importPath <a href=\"http://twitter.com/navega/ui\">@&lt;yourNpmName&gt;/ui</a></pre>\n<p><em>Substituir &lt;</em><a href=\"http://twitter.com/navega/ui\"><em>yourNpmName</em></a><em>&gt; pelo seu perfil \u00fanico no\u00a0NPM.</em></p>\n<p>Certifique-se de que a configura\u00e7\u00e3o das bibliotecas s\u00e3o do tipo buildable e publishable pois precisaremos desta configura\u00e7\u00e3o para publicarmos os\u00a0pacotes.</p>\n<p>Como visto na composi\u00e7\u00e3o da arquitetura, a biblioteca ser\u00e1 gerenciada atrav\u00e9s do CLI do NX, e utilizaremos o <a href=\"https://nx.dev/storybook/overview-angular\">Storybook </a>(em conjunto com o <a href=\"https://compodoc.app/\">Compodoc</a>) para desenvolvimento da documenta\u00e7\u00e3o dos componentes. Em seguida, iremos publicar o Storybook para consulta da documenta\u00e7\u00e3o.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*ajWyysI2FgZYz_o-ocxg5g.png\"></figure><p>Ao executar os comandos, o seu reposit\u00f3rio deve estar parecido com o da imagem acima. Estamos buscando a arquitetura na arvore de arquivos na direita da\u00a0imagem.</p>\n<h4>Incluir o Storybook</h4>\n<p>Vamos incluir o Storybook no nosso reposit\u00f3rio Nx. Voc\u00ea pode realizar isso executando o seguinte comando na raiz do\u00a0projeto:</p>\n<pre>nx g <a href=\"http://twitter.com/nrwl/angular\">@nrwl/angular</a>:storybook-configuration ui</pre>\n<p><em>Eu agrade\u00e7o ao </em><a href=\"https://github.com/wesself/storybookLibSample\"><em>https://github.com/wesself/storybookLibSample</em></a><em> pelo exemplo de configura\u00e7\u00e3o do storybook</em></p>\n<h3>Gerar hist\u00f3rias a partir de componentes</h3>\n<p>Agora vamos gerar um novo componente Angular em nossa biblioteca UI. Voc\u00ea pode fazer isso executando o seguinte comando na raiz do seu\u00a0projeto:</p>\n<pre>nx g @nrwl/angular:component button --project=ui --export</pre>\n<p>Agora que voc\u00ea tem um novo componente em sua biblioteca de interface, voc\u00ea pode usar o gerador de hist\u00f3rias do pacote @nrwl/storybook para gerar hist\u00f3rias para esse novo componente. Vamos ver. Na raiz do seu projeto execute o seguinte\u00a0comando:</p>\n<pre>nx g @nrwl/angular:stories \u2014 project=ui</pre>\n<p>Este comando tamb\u00e9m ir\u00e1 gerar as especifica\u00e7\u00f5es e2e correspondentes. Voc\u00ea tamb\u00e9m pode executar este comando e todos os outros na extens\u00e3o do Nx para o VS\u00a0Code.</p>\n<h4>Executar o Storybook</h4>\n<p>Perfeito, agora tudo o que falta \u00e9 testar o que foi feito e publicar o pacote para o npm (ou um gerenciador de pacotes de sua prefer\u00eancia). Voc\u00ea pode executar o Storybook com o seguinte comando na raiz do\u00a0projeto:</p>\n<pre>nx run ui:storybook </pre>\n<p>E para buildar o projeto de Storybook, voc\u00ea pode executar o seguinte\u00a0comando:</p>\n<pre>nx run ui:build-storybook</pre>\n<p>Para publicar o Storybook, basta hospedar a pasta dist/storybook.</p>\n<h4>Disponibilize a\u00a0UI</h4>\n<p>Estamos quase no fim, agora ser\u00e1 preciso que voc\u00ea construa a solu\u00e7\u00e3o e publique a pasta dist em\u00a0seguida.</p>\n<p>Voc\u00ea pode buildar a solu\u00e7\u00e3o com o comando abaixo na raiz do\u00a0projeto:</p>\n<pre>nx build ui --prod</pre>\n<p>E por\u00a0fim.</p>\n<pre>cd dist/ui &amp;&amp; npm publish</pre>\n<p>Pronto! J\u00e1 temos a base da nossa biblioteca de UI constru\u00edda e pronta para ser usada por v\u00e1rios\u00a0apps!</p>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=95cd398a7610\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>Como desenvolvedores, muitas vezes pensamos em solu\u00e7\u00f5es arquiteturais para projetos novos ou para projetos legados em que trabalhamos, que resolvam de vez um problema de <strong>repeti\u00e7\u00e3o de c\u00f3digo</strong>, e que minimize o trabalho para algo consistente, baseando-se em um sistema de design. Podemos chamar esse questionamento de <strong>\u2018Decis\u00e3o de Design de Longo e Curto\u00a0Prazo\u2019.</strong></p>\n<p>Essa decis\u00e3o geralmente gera bastante estresse no come\u00e7o de uma implementa\u00e7\u00e3o. De um lado, n\u00f3s temos agilidade com resultados de curto prazo, mas com maior risco de falhas especialmente se tratando de normaliza\u00e7\u00e3o de dados. Do outro lado, temos uma despesa maior com an\u00e1lises, gera\u00e7\u00e3o de mais c\u00f3digo e at\u00e9 de documenta\u00e7\u00f5es, por\u00e9m garantimos uma maior manutenibilidade e funcionalidade do software.</p>\n<p>Considere a <strong>biblioteca de design</strong> como uma alternativa para esse problema.</p>\n<h3>O que \u00e9 um sistema de\u00a0design</h3>\n<p>Em primeiro lugar, o que \u00e9 um sistema de design? Um sistema de design \u00e9 o conjunto de estilos, regras e componentes reutiliz\u00e1veis que uma organiza\u00e7\u00e3o ou um aplicativo usa. Brad Frost tem uma \u00f3tima defini\u00e7\u00e3o do que \u00e9 um sistema de design. Trecho dele: \u201c\u2026 um sistema de design [\u00e9] a hist\u00f3ria oficial de como sua organiza\u00e7\u00e3o projeta e constr\u00f3i produtos digitais\u201d.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*z3x7AJjTSpRbQy3zKZdV4A.png\"></figure><p>Acima est\u00e1 uma imagem da arquitetura de uma solu\u00e7\u00e3o de biblioteca de UI. Ela trabalha com o isolamento das pe\u00e7as repetidas que comp\u00f5em o sistema\u00a0final.</p>\n<p>*Para aprofundar um pouco mais na organiza\u00e7\u00e3o dos componentes das bibliotecas, d\u00ea uma olhada no meu <a href=\"https://medium.com/@jackson.pires.rm/aplique-conceitos-de-atomic-design-com-angular-e-nx-41c5f519338c?source=your_stories_page-------------------------------------\">post sobre \u2018Atomic\u00a0Design\u2019</a>.</p>\n<p><strong>Pontos chave da\u00a0solu\u00e7\u00e3o:</strong></p>\n<ol>\n<li>Desacoplar componentes e os blocos da interface.</li>\n<li>Agrupar componentes em \u2018Atomos (Indivisiveis), Mol\u00e9culas(Containeres de \u00c1tomos), Organismos(Containeres de \u00c1tomos e Mol\u00e9culas) e Templates(Containeres de Organismos)\u2019. ( \u2018Atomic\u00a0Design\u2019)</li>\n<li>Documentar o design em p\u00e1gina web. (Storybook)</li>\n<li>Publicar o design como pacote.\u00a0(NPM)</li>\n</ol>\n<h4>Implementa\u00e7\u00e3o da\u00a0solu\u00e7\u00e3o</h4>\n<p>O que \u00e9 o\u00a0NX?</p>\n<figure><img alt=\"NX Logo\" src=\"https://cdn-images-1.medium.com/max/566/1*sdZ3w1jvisQwqUxAVaw0zQ.png\"></figure><p>NX \u00e9 um sistema de compila\u00e7\u00e3o com suporte a monorepo. Ele \u00e9 um padr\u00e3o do mercado para desenvolvimento de pacotes npm. Veja mais em <a href=\"https://nx.dev/\">https://nx.dev</a>.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*JQKZktX2m4Kt0dgiOlqLtA.png\"></figure><p>No desenvolvimento da biblioteca nesse tutorial, n\u00f3s usaremos o Nx, em conjunto do Storybook e do Compodoc.</p>\n<p>Vamos ao\u00a0c\u00f3digo!</p>\n<h4>(opcional) <em>Caso n\u00e3o possua o Angular instalado</em>\n</h4>\n<p>Voc\u00ea pode instala-lo usando o seguinte comando no\u00a0terminal</p>\n<p>npm install -g <a href=\"http://twitter.com/angular/cli\">@angular/cli</a>@latest</p>\n<h4>Instalar o\u00a0Nx</h4>\n<p>Vamos agora instalar nosso gerenciador. Voc\u00ea pode instala-lo usando o seguinte comando no terminal.</p>\n<pre>npm install -g nx</pre>\n<h4>Criar um Workspace (Angular) com\u00a0NX</h4>\n<p>Para criar um workspace no NX, execute o seguinte c\u00f3digo no terminal e selecione os passos que correspondem ao seu framework e tipo de arquivo de estilo (css, less,\u00a0etc)</p>\n<pre>npx create-nx-workspace &lt;workspace&gt;<br>cd &lt;worspace&gt;</pre>\n<p>*Siga os passos marcando a op\u00e7\u00e3o que represente o framework Angular</p>\n<p><em>Substituir &lt;workspace&gt; pelo nome do seu workspace.</em></p>\n<h4>Gerar bibliotecas com\u00a0NX</h4>\n<p>Agora vamos gerar a nossa biblioteca principal, a\u00a0UI.</p>\n<p>Por brevidade, iremos criar somente a bibioteca de UI, por\u00e9m sinta-se a vontade para gerar as que precisar para o seu\u00a0projeto.</p>\n<pre>nx g <a href=\"http://twitter.com/nrwl/angular\">@nrwl/angular</a>:lib ui --buildable --publishable --importPath <a href=\"http://twitter.com/navega/ui\">@&lt;yourNpmName&gt;/ui</a></pre>\n<p><em>Substituir &lt;</em><a href=\"http://twitter.com/navega/ui\"><em>yourNpmName</em></a><em>&gt; pelo seu perfil \u00fanico no\u00a0NPM.</em></p>\n<p>Certifique-se de que a configura\u00e7\u00e3o das bibliotecas s\u00e3o do tipo buildable e publishable pois precisaremos desta configura\u00e7\u00e3o para publicarmos os\u00a0pacotes.</p>\n<p>Como visto na composi\u00e7\u00e3o da arquitetura, a biblioteca ser\u00e1 gerenciada atrav\u00e9s do CLI do NX, e utilizaremos o <a href=\"https://nx.dev/storybook/overview-angular\">Storybook </a>(em conjunto com o <a href=\"https://compodoc.app/\">Compodoc</a>) para desenvolvimento da documenta\u00e7\u00e3o dos componentes. Em seguida, iremos publicar o Storybook para consulta da documenta\u00e7\u00e3o.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*ajWyysI2FgZYz_o-ocxg5g.png\"></figure><p>Ao executar os comandos, o seu reposit\u00f3rio deve estar parecido com o da imagem acima. Estamos buscando a arquitetura na arvore de arquivos na direita da\u00a0imagem.</p>\n<h4>Incluir o Storybook</h4>\n<p>Vamos incluir o Storybook no nosso reposit\u00f3rio Nx. Voc\u00ea pode realizar isso executando o seguinte comando na raiz do\u00a0projeto:</p>\n<pre>nx g <a href=\"http://twitter.com/nrwl/angular\">@nrwl/angular</a>:storybook-configuration ui</pre>\n<p><em>Eu agrade\u00e7o ao </em><a href=\"https://github.com/wesself/storybookLibSample\"><em>https://github.com/wesself/storybookLibSample</em></a><em> pelo exemplo de configura\u00e7\u00e3o do storybook</em></p>\n<h3>Gerar hist\u00f3rias a partir de componentes</h3>\n<p>Agora vamos gerar um novo componente Angular em nossa biblioteca UI. Voc\u00ea pode fazer isso executando o seguinte comando na raiz do seu\u00a0projeto:</p>\n<pre>nx g @nrwl/angular:component button --project=ui --export</pre>\n<p>Agora que voc\u00ea tem um novo componente em sua biblioteca de interface, voc\u00ea pode usar o gerador de hist\u00f3rias do pacote @nrwl/storybook para gerar hist\u00f3rias para esse novo componente. Vamos ver. Na raiz do seu projeto execute o seguinte\u00a0comando:</p>\n<pre>nx g @nrwl/angular:stories \u2014 project=ui</pre>\n<p>Este comando tamb\u00e9m ir\u00e1 gerar as especifica\u00e7\u00f5es e2e correspondentes. Voc\u00ea tamb\u00e9m pode executar este comando e todos os outros na extens\u00e3o do Nx para o VS\u00a0Code.</p>\n<h4>Executar o Storybook</h4>\n<p>Perfeito, agora tudo o que falta \u00e9 testar o que foi feito e publicar o pacote para o npm (ou um gerenciador de pacotes de sua prefer\u00eancia). Voc\u00ea pode executar o Storybook com o seguinte comando na raiz do\u00a0projeto:</p>\n<pre>nx run ui:storybook </pre>\n<p>E para buildar o projeto de Storybook, voc\u00ea pode executar o seguinte\u00a0comando:</p>\n<pre>nx run ui:build-storybook</pre>\n<p>Para publicar o Storybook, basta hospedar a pasta dist/storybook.</p>\n<h4>Disponibilize a\u00a0UI</h4>\n<p>Estamos quase no fim, agora ser\u00e1 preciso que voc\u00ea construa a solu\u00e7\u00e3o e publique a pasta dist em\u00a0seguida.</p>\n<p>Voc\u00ea pode buildar a solu\u00e7\u00e3o com o comando abaixo na raiz do\u00a0projeto:</p>\n<pre>nx build ui --prod</pre>\n<p>E por\u00a0fim.</p>\n<pre>cd dist/ui &amp;&amp; npm publish</pre>\n<p>Pronto! J\u00e1 temos a base da nossa biblioteca de UI constru\u00edda e pronta para ser usada por v\u00e1rios\u00a0apps!</p>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=95cd398a7610\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["design-systems","nx","npm","ui-library","atomic-design"]},{"title":"Fullstack versus Fullcycle no Desenvolvimento de software.","pubDate":"2022-04-22 08:52:35","link":"https://medium.com/@jackson.pires.rm/fullstack-versus-fullcycle-no-desenvolvimento-de-software-c19b0959a1c2?source=rss-2b66cd090f51------2","guid":"https://medium.com/p/c19b0959a1c2","author":"Jackson Pires Ramalho","thumbnail":"https://cdn-images-1.medium.com/max/569/0*JHgVIe91Ai8tRUkM.png","description":"\n<p>Estava estudando na plataforma de cursos Alura quando me deparei com a <a href=\"https://www.alura.com.br/artigos/dev-full-cycle-o-que-e\">postagem do educador Vinicius Dias</a>, sobre o Fullcycle Developer. O titulo do artigo me intrigou bastante, tendo em vista que estava visando uma carreira como <em>Fullstack Developer</em>.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/569/0*JHgVIe91Ai8tRUkM.png\"></figure><p>Confesso que, de inicio, subestimei a relev\u00e2ncia dessa pratica em detrimento do abordagem Fullstack, \u201cDeve ser apenas uma \u2018Trend\u2019 mas no geral ser tudo a mesma coisa\u201d, felizmente eu estava enganado.</p>\n<p>Aprofundando nesse novo conceito, percebi <em>primeiramente o qu\u00e3o </em><strong><em>rookie </em></strong><em>eu sou como desenvolvedor, </em>mas segundamente um novo caminho para a minha especializa\u00e7\u00e3o e plano de carreira.</p>\n<p>Na vis\u00e3o do Vinicius, o Fullstack Developer \u00e9 um profissional generalista que sabe <em>\u201cde tudo um pouco\u201d</em>, por outro lado, o Desenvolvedor Fullcycle tamb\u00e9m \u00e9 um generalista, por\u00e9m munido de ferramentas corretas para atuar em todo o Ciclo de Desenvolvimento do Software\u00a0(SDLC).</p>\n<h3>Responsabilidades de cada Desenvolvedor</h3>\n<p>Com o ferramental <em>e </em>infraestrutura<em> </em>apropriado, o Fullcyle consegue atuar com responsabilidade ampla em praticamente todas as fases do desenvolvimento de um produto, principalmente com automatiza\u00e7\u00e3o das necessidades b\u00e1sicas da constru\u00e7\u00e3o de solu\u00e7\u00f5es. <em>(como a configura\u00e7\u00e3o da cria\u00e7\u00e3o de um banco de dados em nuvem para um microservi\u00e7o, ou a obten\u00e7\u00e3o de m\u00e9tricas de monitoramento)</em></p>\n<p>Tendo contato com o <a href=\"https://netflixtechblog.com/full-cycle-developers-at-netflix-a08c31f83249?gi=beb608ceca71\">artigo</a> original produzido pela Netflix pude perceber o qu\u00e3o certo est\u00e1 essa afirma\u00e7\u00e3o!</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/714/0*0EDWBhAF2-8LJb2J.png\"></figure><h3>Full Cycle Developer</h3>\n<p>O termo foi cunhado no cen\u00e1rio da empresa Netflix no per\u00edodo entre 2012 e 2018, e prop\u00f5e, essencialmente, uma solu\u00e7\u00e3o para lacunas de comunica\u00e7\u00e3o entre equipes altamente especializadas (monodisciplinares) e segregadas pelas etapas de desenvolvimento de software. Sendo essas etapas; o design; comumente representada pela equipe de arquitetos e SWE\u2019s (Sofware Engineers), a etapa de desenvolvimento; representada pelos Front e Back-end Developers, a etapa de testes; representada pelos SWET\u2019s (Software Engineers in Test), a etapa de deploy, e opera\u00e7\u00f5es; representada por especialistas de publica\u00e7\u00e3o e infraestrutura, e o suporte da solu\u00e7\u00e3o, representada pelas centrais de atendimento ao\u00a0cliente.</p>\n<h3>Principais diferen\u00e7as do Fullcycle para o Fullstack</h3>\n<p>De acordo com os autores do artigo, o que diferencia os dois profissionais \u00e9 o foco em solu\u00e7\u00f5es automatizadas no lugar de abordagens manuais para manuten\u00e7\u00f5es nos \u2018stacks\u2019 do produto. Tanto o Fullstack quanto o Fullcycle agem ora como um Engenheiro de software (SWE), ora como um Engenheiro de testes (SWET), ou mesmo como um Engenheiro de Confiabilidade de Sites (SRE) no modelo da Google. Por\u00e9m dentre os dois, somente o \u00faltimo tem uma ideia completa de <strong>ownership</strong> pela solu\u00e7\u00e3o na equipe. O que mais diferencia o <strong>Fullcycle </strong>do<strong> </strong>Fullstack, \u00e9 o uso de diversas tecnologias com prop\u00f3sito de agregar valor ao cliente e ao produto, <strong>de forma que a empresa ou outros colegas n\u00e3o criem depend\u00eancia no profissional</strong>.</p>\n<h3>Qual dos dois vale mais a\u00a0pena?</h3>\n<p>Pela alta rotatividade do mercado e principalmente pelo surgimento constante de novas tecnologias, qualquer especialista corre grande risco de obsolesc\u00eancia. Por isso \u00e9 necess\u00e1rio estar disposto a <strong>aprender variadas tecnologias e habilidades para manter-se relevante no mercado</strong>. Seja pela aud\u00e1cia do Fullstack, ou pelo prop\u00f3sito do Fullcycle, a multidisciplinaridade desses profissionais \u00e9 um ativo extremamente importante para o sucesso tanto de um produto, quanto de uma empresa como um todo.. Agora; eu sei qual deles eu pretendo me tornar, qual titulo voc\u00ea acha mais\u00a0justo?</p>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=c19b0959a1c2\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>Estava estudando na plataforma de cursos Alura quando me deparei com a <a href=\"https://www.alura.com.br/artigos/dev-full-cycle-o-que-e\">postagem do educador Vinicius Dias</a>, sobre o Fullcycle Developer. O titulo do artigo me intrigou bastante, tendo em vista que estava visando uma carreira como <em>Fullstack Developer</em>.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/569/0*JHgVIe91Ai8tRUkM.png\"></figure><p>Confesso que, de inicio, subestimei a relev\u00e2ncia dessa pratica em detrimento do abordagem Fullstack, \u201cDeve ser apenas uma \u2018Trend\u2019 mas no geral ser tudo a mesma coisa\u201d, felizmente eu estava enganado.</p>\n<p>Aprofundando nesse novo conceito, percebi <em>primeiramente o qu\u00e3o </em><strong><em>rookie </em></strong><em>eu sou como desenvolvedor, </em>mas segundamente um novo caminho para a minha especializa\u00e7\u00e3o e plano de carreira.</p>\n<p>Na vis\u00e3o do Vinicius, o Fullstack Developer \u00e9 um profissional generalista que sabe <em>\u201cde tudo um pouco\u201d</em>, por outro lado, o Desenvolvedor Fullcycle tamb\u00e9m \u00e9 um generalista, por\u00e9m munido de ferramentas corretas para atuar em todo o Ciclo de Desenvolvimento do Software\u00a0(SDLC).</p>\n<h3>Responsabilidades de cada Desenvolvedor</h3>\n<p>Com o ferramental <em>e </em>infraestrutura<em> </em>apropriado, o Fullcyle consegue atuar com responsabilidade ampla em praticamente todas as fases do desenvolvimento de um produto, principalmente com automatiza\u00e7\u00e3o das necessidades b\u00e1sicas da constru\u00e7\u00e3o de solu\u00e7\u00f5es. <em>(como a configura\u00e7\u00e3o da cria\u00e7\u00e3o de um banco de dados em nuvem para um microservi\u00e7o, ou a obten\u00e7\u00e3o de m\u00e9tricas de monitoramento)</em></p>\n<p>Tendo contato com o <a href=\"https://netflixtechblog.com/full-cycle-developers-at-netflix-a08c31f83249?gi=beb608ceca71\">artigo</a> original produzido pela Netflix pude perceber o qu\u00e3o certo est\u00e1 essa afirma\u00e7\u00e3o!</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/714/0*0EDWBhAF2-8LJb2J.png\"></figure><h3>Full Cycle Developer</h3>\n<p>O termo foi cunhado no cen\u00e1rio da empresa Netflix no per\u00edodo entre 2012 e 2018, e prop\u00f5e, essencialmente, uma solu\u00e7\u00e3o para lacunas de comunica\u00e7\u00e3o entre equipes altamente especializadas (monodisciplinares) e segregadas pelas etapas de desenvolvimento de software. Sendo essas etapas; o design; comumente representada pela equipe de arquitetos e SWE\u2019s (Sofware Engineers), a etapa de desenvolvimento; representada pelos Front e Back-end Developers, a etapa de testes; representada pelos SWET\u2019s (Software Engineers in Test), a etapa de deploy, e opera\u00e7\u00f5es; representada por especialistas de publica\u00e7\u00e3o e infraestrutura, e o suporte da solu\u00e7\u00e3o, representada pelas centrais de atendimento ao\u00a0cliente.</p>\n<h3>Principais diferen\u00e7as do Fullcycle para o Fullstack</h3>\n<p>De acordo com os autores do artigo, o que diferencia os dois profissionais \u00e9 o foco em solu\u00e7\u00f5es automatizadas no lugar de abordagens manuais para manuten\u00e7\u00f5es nos \u2018stacks\u2019 do produto. Tanto o Fullstack quanto o Fullcycle agem ora como um Engenheiro de software (SWE), ora como um Engenheiro de testes (SWET), ou mesmo como um Engenheiro de Confiabilidade de Sites (SRE) no modelo da Google. Por\u00e9m dentre os dois, somente o \u00faltimo tem uma ideia completa de <strong>ownership</strong> pela solu\u00e7\u00e3o na equipe. O que mais diferencia o <strong>Fullcycle </strong>do<strong> </strong>Fullstack, \u00e9 o uso de diversas tecnologias com prop\u00f3sito de agregar valor ao cliente e ao produto, <strong>de forma que a empresa ou outros colegas n\u00e3o criem depend\u00eancia no profissional</strong>.</p>\n<h3>Qual dos dois vale mais a\u00a0pena?</h3>\n<p>Pela alta rotatividade do mercado e principalmente pelo surgimento constante de novas tecnologias, qualquer especialista corre grande risco de obsolesc\u00eancia. Por isso \u00e9 necess\u00e1rio estar disposto a <strong>aprender variadas tecnologias e habilidades para manter-se relevante no mercado</strong>. Seja pela aud\u00e1cia do Fullstack, ou pelo prop\u00f3sito do Fullcycle, a multidisciplinaridade desses profissionais \u00e9 um ativo extremamente importante para o sucesso tanto de um produto, quanto de uma empresa como um todo.. Agora; eu sei qual deles eu pretendo me tornar, qual titulo voc\u00ea acha mais\u00a0justo?</p>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=c19b0959a1c2\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["full-cycle-developer","essay"]},{"title":"O que e para qu\u00ea \u00e9 o Xamarin?","pubDate":"2022-04-22 08:51:34","link":"https://medium.com/@jackson.pires.rm/o-que-e-para-qu%C3%AA-%C3%A9-o-xamarin-6bad77285e01?source=rss-2b66cd090f51------2","guid":"https://medium.com/p/6bad77285e01","author":"Jackson Pires Ramalho","thumbnail":"https://cdn-images-1.medium.com/max/700/0*Kuy8PVJebeFGvNLE.png","description":"\n<h3>Como essa tecnologia se compara com React, Flutter e\u00a0Ionic?</h3>\n<p><strong>Xamarin</strong>, assim como o React Native, Ionic, Native-Script e muitas outras <em>frameworks,</em> \u00e9 um conjunto de t\u00e9cnicas para desenvolvimento mobile Cross-Platform. Sua premissa \u00e9 conseguir, com uma s\u00f3 <em>code base</em>, compilar sem dificuldade para <strong>diversas </strong>plataformas.</p>\n<p>A empresa Xamarin foi fundada em 2011 pelos engenheiros Jason Smith (criador do Xamarin Forms), Nat Friedman e Michael Icaza, do projeto <a href=\"https://www.mono-project.com/\"><strong>Mono</strong></a><strong>, </strong>para execu\u00e7\u00e3o de c\u00f3digo C# em multiplataforma, como uma solu\u00e7\u00e3o para a compila\u00e7\u00e3o e interoperabilidade de\u00a0c\u00f3digo.</p>\n<p><strong>Objetivo</strong></p>\n<p>O Xamarin tem o prop\u00f3sito de permitir o desenvolvimento de aplicativos nativos para Android, IOS e Windows Phone (tamb\u00e9m para Linux, MacOS, Solaris, e para consoles) com o uso da linguagem C# e do ambiente\u00a0.NET.</p>\n<p><strong>Usos do\u00a0Xamarin:</strong></p>\n<p>Com <strong><em>Xamarin.Android</em></strong>, configuramos o c\u00f3digo\u00a0.NET para executar lado-a-lado com o ART (Android Runtime), que \u00e9 compilado ao iniciar a aplica\u00e7\u00e3o (compila\u00e7\u00e3o JIT, ou Just-In-Time). A aplica\u00e7\u00e3o cont\u00e9m la\u00e7os\u00a0.Net para os <em>namespaces </em>Android e\u00a0Java.</p>\n<p>No<strong> <em>Xamarin.IOS</em> </strong>as aplica\u00e7\u00f5es s\u00e3o compiladas <em>Ahead-of-Time</em> (AOT) para o c\u00f3digo de<em> arquitetura ARM</em>, e estabelece la\u00e7os entre<em> Objective-C</em> e o <em>C#</em>, permitindo que os dois se comuniquem.</p>\n<p><strong>Xamarin.Mac</strong> tamb\u00e9m \u00e9 uma realidade para<em> </em>desenvolvedores da\u00a0ma\u00e7\u00e3<em>.</em></p>\n<p><strong>Xamarin.Essentials</strong> \u00e9 uma abstra\u00e7\u00e3o multiplataforma que fornece acesso simples a fun\u00e7\u00f5es nativas,\u00a0como:</p>\n<ul>\n<li>Informa\u00e7\u00f5es do dispositivo</li>\n<li>Sistema de\u00a0arquivos</li>\n<li>Aceler\u00f4metro</li>\n<li>Discagem</li>\n<li>Texto-para-fala</li>\n<li>Trava de\u00a0tela</li>\n</ul>\n<p>E por \u00faltimo, com<strong> <em>Xamarin.Forms</em></strong> \u00e9 poss\u00edvel desenvolver a interface das aplica\u00e7\u00f5es de forma centralizada, com apenas uma base de c\u00f3digo Front-end e com Back-end em C#.<br><strong><em>Xamarin.Forms</em></strong>, apesar de ser uma solu\u00e7\u00e3o mais limitada (pela necessidade de ser consistente em sistemas diferentes com o mesmo c\u00f3digo) possui diversas op\u00e7\u00f5es de estilos, efeitos e gestos para que as aplica\u00e7\u00f5es finais sejam elegantes e agrad\u00e1veis.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/700/0*Kuy8PVJebeFGvNLE.png\"></figure><p><strong>Beneficios do\u00a0Xamarin:</strong></p>\n<p>Os benef\u00edcios da utiliza\u00e7\u00e3o do <strong><em>Xamarin </em></strong>em projetos de software, surgem com a natureza da <em>linguagem h\u00edbrida</em></p>\n<blockquote><em>\u201cApenas uma tecnologia, v\u00e1rias distribui\u00e7\u00f5es\u201d</em></blockquote>\n<p>O que torna o desenvolvimento de sistemas multiplataforma muito mais rent\u00e1vel, pois n\u00e3o se faz necess\u00e1rio o envolvimento de m\u00faltiplas equipes e habilidades no mesmo\u00a0projeto.</p>\n<p>Outro benef\u00edcio surge pela utiliza\u00e7\u00e3o da linguagem C# em detrimento de uma linguagem pr\u00f3pria (<em>como \u00e9 o caso do Kotlin, por exemplo</em>), o que garante uma interoperabilidade entre a solu\u00e7\u00e3o desenvolvida em <strong>Xamarin </strong>e outros poss\u00edveis projetos da equipe, facilitando a reutiliza\u00e7\u00e3o de c\u00f3digo e da base de conhecimento.</p>\n<blockquote><em>No fim, a escolha pela tecnologia de compila\u00e7\u00e3o para nativo depende da experi\u00eancia da\u00a0equipe.</em></blockquote>\n<p>Caso os desenvolvedores tenham mais experi\u00eancia com\u00a0.Net, a escolha por <strong>Xamarin </strong>pode prevalecer. Caso tenham mais conhecimento em Angular ou React, as solu\u00e7\u00f5es <strong>React Native</strong>, <strong>Native Script</strong> e <strong>Ionic</strong> podem ser mais atraentes.</p>\n<p><strong>Quais as plataformas em que se pode desenvolver com essa tecnologia, e qual \u00e9 a\u00a0ideal?</strong></p>\n<p>Por motivos relacionados a aquisi\u00e7\u00e3o da <strong>Xamarin </strong>pela Microsoft, o principal ambiente de desenvolvimento para Xamarin \u00e9 o <strong>Visual Studio</strong>, que recebe uma carga de trabalho para desenvolvimento Mobile envolvendo o Xamarin com uma solu\u00e7\u00e3o de cria\u00e7\u00e3o de interfaces e virtualiza\u00e7\u00e3o a exemplo do <em>Android\u00a0Studio</em>.</p>\n<blockquote><em>A plataforma ideal depende do sistema operacional.</em></blockquote>\n<p>No Windows, a principal plataforma de desenvolvimento \u00e9 o<strong> Visual Studio</strong>, j\u00e1 no Linux passa a ser o <strong><em>MonoDevelop</em></strong>.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/700/0*ruxIUgDQIhSiAJKp.png\"></figure><p><strong>Como essa plataforma de desenvolvimento h\u00edbrido se compara com as Frameworks JavaScript da atualidade?</strong></p>\n<p>A ideia da <em>cross-compatibilidade</em> de c\u00f3digo<em>\u00a0.Net</em> surgiu com a introdu\u00e7\u00e3o do<em>\u00a0.Net Framework</em> nos anos 2000, com o lan\u00e7amento da linguagem <em>C#</em>, o que propulsionou o desenvolvimento de tecnologias como o <em>Mono</em> e posteriormente o\u00a0<strong>Xamarin</strong>.</p>\n<p>A tecnologia foi apresentada em 2011 e em seguida foi adquirida (ap\u00f3s cinco anos) pela <strong>Microsoft</strong>. Nesse tempo, a tecnologia ganhou bastante popularidade e se manteve est\u00e1vel nos \u00edndices de uso, com aproximadamente <strong>1.6 milh\u00f5es de desenvolvedores ativos por ano</strong>. <em>(</em><a href=\"https://towardsdatascience.com/flutter-vs-react-native-vs-xamarin-which-is-the-best-choice-for-2019-2bc30fc76442\"><em>TowarsDataScience\u200a\u2014\u200aFlutter x ReactNative x\u00a0Xamarin</em></a><em>)</em></p>\n<p><strong>Em 2016</strong>, surge a Framework <strong>React Native</strong>, desenvolvida pela equipe do <em>Facebook</em>, que dominou grande parte do mercado, e<strong> </strong><em>ultrapassou pela primeira vez o Xamarin</em>. Nesse per\u00edodo o mesmo seguiu um padr\u00e3o de estagna\u00e7\u00e3o, e <strong>perdeu popularidade</strong> e opini\u00e3o do p\u00fablico <strong>para tecnologias recentes </strong>baseadas em linguagens pouco tipadas, como pr\u00f3prio <em>React Native</em>, <em>Flutter</em>, <em>Ionic </em>e <em>Native\u00a0script</em>.</p>\n<p>Em quest\u00e3o de performance, o Xamarin \u00e9 compar\u00e1vel com aplica\u00e7\u00f5es nativas, e tem alta performance. Perde apenas para o <strong>Flutter</strong>, que<strong> consegue ter uma velocidade de processamento superior </strong>utilizando a linguagem pr\u00f3pria <strong>(Dart) </strong>ao inv\u00e9s de Javascript.</p>\n<p>Apesar de sua enorme robustez, potencializada pela capacidade de f\u00e1cil implementa\u00e7\u00e3o de c\u00f3digo de outras linguagens <em>(fun\u00e7\u00f5es como: edi\u00e7\u00e3o de v\u00eddeo e imagens) </em><strong>aplica\u00e7\u00f5es baseadas React Native tendem a ter menor performance.</strong></p>\n<p><strong>Em rela\u00e7\u00e3o a disponibilidade de material de refer\u00eancia e suporte</strong>, <em>Xamarin </em><strong>possui maior conte\u00fado do que linguagens recentes</strong>, mais especificamente o React Native. Seguido do <strong>Xamarin </strong>\u00e9 ele o segundo maior termo de busca, o terceiro sendo <strong>Native\u00a0Script</strong>.</p>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar o quanto voc\u00ea gostou\u00a0:)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=6bad77285e01\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>Como essa tecnologia se compara com React, Flutter e\u00a0Ionic?</h3>\n<p><strong>Xamarin</strong>, assim como o React Native, Ionic, Native-Script e muitas outras <em>frameworks,</em> \u00e9 um conjunto de t\u00e9cnicas para desenvolvimento mobile Cross-Platform. Sua premissa \u00e9 conseguir, com uma s\u00f3 <em>code base</em>, compilar sem dificuldade para <strong>diversas </strong>plataformas.</p>\n<p>A empresa Xamarin foi fundada em 2011 pelos engenheiros Jason Smith (criador do Xamarin Forms), Nat Friedman e Michael Icaza, do projeto <a href=\"https://www.mono-project.com/\"><strong>Mono</strong></a><strong>, </strong>para execu\u00e7\u00e3o de c\u00f3digo C# em multiplataforma, como uma solu\u00e7\u00e3o para a compila\u00e7\u00e3o e interoperabilidade de\u00a0c\u00f3digo.</p>\n<p><strong>Objetivo</strong></p>\n<p>O Xamarin tem o prop\u00f3sito de permitir o desenvolvimento de aplicativos nativos para Android, IOS e Windows Phone (tamb\u00e9m para Linux, MacOS, Solaris, e para consoles) com o uso da linguagem C# e do ambiente\u00a0.NET.</p>\n<p><strong>Usos do\u00a0Xamarin:</strong></p>\n<p>Com <strong><em>Xamarin.Android</em></strong>, configuramos o c\u00f3digo\u00a0.NET para executar lado-a-lado com o ART (Android Runtime), que \u00e9 compilado ao iniciar a aplica\u00e7\u00e3o (compila\u00e7\u00e3o JIT, ou Just-In-Time). A aplica\u00e7\u00e3o cont\u00e9m la\u00e7os\u00a0.Net para os <em>namespaces </em>Android e\u00a0Java.</p>\n<p>No<strong> <em>Xamarin.IOS</em> </strong>as aplica\u00e7\u00f5es s\u00e3o compiladas <em>Ahead-of-Time</em> (AOT) para o c\u00f3digo de<em> arquitetura ARM</em>, e estabelece la\u00e7os entre<em> Objective-C</em> e o <em>C#</em>, permitindo que os dois se comuniquem.</p>\n<p><strong>Xamarin.Mac</strong> tamb\u00e9m \u00e9 uma realidade para<em> </em>desenvolvedores da\u00a0ma\u00e7\u00e3<em>.</em></p>\n<p><strong>Xamarin.Essentials</strong> \u00e9 uma abstra\u00e7\u00e3o multiplataforma que fornece acesso simples a fun\u00e7\u00f5es nativas,\u00a0como:</p>\n<ul>\n<li>Informa\u00e7\u00f5es do dispositivo</li>\n<li>Sistema de\u00a0arquivos</li>\n<li>Aceler\u00f4metro</li>\n<li>Discagem</li>\n<li>Texto-para-fala</li>\n<li>Trava de\u00a0tela</li>\n</ul>\n<p>E por \u00faltimo, com<strong> <em>Xamarin.Forms</em></strong> \u00e9 poss\u00edvel desenvolver a interface das aplica\u00e7\u00f5es de forma centralizada, com apenas uma base de c\u00f3digo Front-end e com Back-end em C#.<br><strong><em>Xamarin.Forms</em></strong>, apesar de ser uma solu\u00e7\u00e3o mais limitada (pela necessidade de ser consistente em sistemas diferentes com o mesmo c\u00f3digo) possui diversas op\u00e7\u00f5es de estilos, efeitos e gestos para que as aplica\u00e7\u00f5es finais sejam elegantes e agrad\u00e1veis.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/700/0*Kuy8PVJebeFGvNLE.png\"></figure><p><strong>Beneficios do\u00a0Xamarin:</strong></p>\n<p>Os benef\u00edcios da utiliza\u00e7\u00e3o do <strong><em>Xamarin </em></strong>em projetos de software, surgem com a natureza da <em>linguagem h\u00edbrida</em></p>\n<blockquote><em>\u201cApenas uma tecnologia, v\u00e1rias distribui\u00e7\u00f5es\u201d</em></blockquote>\n<p>O que torna o desenvolvimento de sistemas multiplataforma muito mais rent\u00e1vel, pois n\u00e3o se faz necess\u00e1rio o envolvimento de m\u00faltiplas equipes e habilidades no mesmo\u00a0projeto.</p>\n<p>Outro benef\u00edcio surge pela utiliza\u00e7\u00e3o da linguagem C# em detrimento de uma linguagem pr\u00f3pria (<em>como \u00e9 o caso do Kotlin, por exemplo</em>), o que garante uma interoperabilidade entre a solu\u00e7\u00e3o desenvolvida em <strong>Xamarin </strong>e outros poss\u00edveis projetos da equipe, facilitando a reutiliza\u00e7\u00e3o de c\u00f3digo e da base de conhecimento.</p>\n<blockquote><em>No fim, a escolha pela tecnologia de compila\u00e7\u00e3o para nativo depende da experi\u00eancia da\u00a0equipe.</em></blockquote>\n<p>Caso os desenvolvedores tenham mais experi\u00eancia com\u00a0.Net, a escolha por <strong>Xamarin </strong>pode prevalecer. Caso tenham mais conhecimento em Angular ou React, as solu\u00e7\u00f5es <strong>React Native</strong>, <strong>Native Script</strong> e <strong>Ionic</strong> podem ser mais atraentes.</p>\n<p><strong>Quais as plataformas em que se pode desenvolver com essa tecnologia, e qual \u00e9 a\u00a0ideal?</strong></p>\n<p>Por motivos relacionados a aquisi\u00e7\u00e3o da <strong>Xamarin </strong>pela Microsoft, o principal ambiente de desenvolvimento para Xamarin \u00e9 o <strong>Visual Studio</strong>, que recebe uma carga de trabalho para desenvolvimento Mobile envolvendo o Xamarin com uma solu\u00e7\u00e3o de cria\u00e7\u00e3o de interfaces e virtualiza\u00e7\u00e3o a exemplo do <em>Android\u00a0Studio</em>.</p>\n<blockquote><em>A plataforma ideal depende do sistema operacional.</em></blockquote>\n<p>No Windows, a principal plataforma de desenvolvimento \u00e9 o<strong> Visual Studio</strong>, j\u00e1 no Linux passa a ser o <strong><em>MonoDevelop</em></strong>.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/700/0*ruxIUgDQIhSiAJKp.png\"></figure><p><strong>Como essa plataforma de desenvolvimento h\u00edbrido se compara com as Frameworks JavaScript da atualidade?</strong></p>\n<p>A ideia da <em>cross-compatibilidade</em> de c\u00f3digo<em>\u00a0.Net</em> surgiu com a introdu\u00e7\u00e3o do<em>\u00a0.Net Framework</em> nos anos 2000, com o lan\u00e7amento da linguagem <em>C#</em>, o que propulsionou o desenvolvimento de tecnologias como o <em>Mono</em> e posteriormente o\u00a0<strong>Xamarin</strong>.</p>\n<p>A tecnologia foi apresentada em 2011 e em seguida foi adquirida (ap\u00f3s cinco anos) pela <strong>Microsoft</strong>. Nesse tempo, a tecnologia ganhou bastante popularidade e se manteve est\u00e1vel nos \u00edndices de uso, com aproximadamente <strong>1.6 milh\u00f5es de desenvolvedores ativos por ano</strong>. <em>(</em><a href=\"https://towardsdatascience.com/flutter-vs-react-native-vs-xamarin-which-is-the-best-choice-for-2019-2bc30fc76442\"><em>TowarsDataScience\u200a\u2014\u200aFlutter x ReactNative x\u00a0Xamarin</em></a><em>)</em></p>\n<p><strong>Em 2016</strong>, surge a Framework <strong>React Native</strong>, desenvolvida pela equipe do <em>Facebook</em>, que dominou grande parte do mercado, e<strong> </strong><em>ultrapassou pela primeira vez o Xamarin</em>. Nesse per\u00edodo o mesmo seguiu um padr\u00e3o de estagna\u00e7\u00e3o, e <strong>perdeu popularidade</strong> e opini\u00e3o do p\u00fablico <strong>para tecnologias recentes </strong>baseadas em linguagens pouco tipadas, como pr\u00f3prio <em>React Native</em>, <em>Flutter</em>, <em>Ionic </em>e <em>Native\u00a0script</em>.</p>\n<p>Em quest\u00e3o de performance, o Xamarin \u00e9 compar\u00e1vel com aplica\u00e7\u00f5es nativas, e tem alta performance. Perde apenas para o <strong>Flutter</strong>, que<strong> consegue ter uma velocidade de processamento superior </strong>utilizando a linguagem pr\u00f3pria <strong>(Dart) </strong>ao inv\u00e9s de Javascript.</p>\n<p>Apesar de sua enorme robustez, potencializada pela capacidade de f\u00e1cil implementa\u00e7\u00e3o de c\u00f3digo de outras linguagens <em>(fun\u00e7\u00f5es como: edi\u00e7\u00e3o de v\u00eddeo e imagens) </em><strong>aplica\u00e7\u00f5es baseadas React Native tendem a ter menor performance.</strong></p>\n<p><strong>Em rela\u00e7\u00e3o a disponibilidade de material de refer\u00eancia e suporte</strong>, <em>Xamarin </em><strong>possui maior conte\u00fado do que linguagens recentes</strong>, mais especificamente o React Native. Seguido do <strong>Xamarin </strong>\u00e9 ele o segundo maior termo de busca, o terceiro sendo <strong>Native\u00a0Script</strong>.</p>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar o quanto voc\u00ea gostou\u00a0:)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=6bad77285e01\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["xamarin","essay","mobile"]}]}