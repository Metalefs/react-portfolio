{"status":"ok","feed":{"url":"https://medium.com/feed/@jackson.pires.rm","title":"Stories by Jackson Pires Ramalho on Medium","link":"https://medium.com/@jackson.pires.rm?source=rss-2b66cd090f51------2","author":"","description":"Stories by Jackson Pires Ramalho on Medium","image":"https://cdn-images-1.medium.com/fit/c/150/150/0*ndvHCB8ZgfNht6nt"},"items":[{"title":"Fullstack versus Fullcycle no Desenvolvimento de software.","pubDate":"2022-04-22 08:52:35","link":"https://medium.com/@jackson.pires.rm/fullstack-versus-fullcycle-no-desenvolvimento-de-software-c19b0959a1c2?source=rss-2b66cd090f51------2","guid":"https://medium.com/p/c19b0959a1c2","author":"Jackson Pires Ramalho","thumbnail":"https://cdn-images-1.medium.com/max/569/0*JHgVIe91Ai8tRUkM.png","description":"\n<p>Estava estudando na plataforma de cursos Alura quando me deparei com a <a href=\"https://www.alura.com.br/artigos/dev-full-cycle-o-que-e\">postagem do educador Vinicius Dias</a>, sobre o Fullcycle Developer. O titulo do artigo me intrigou bastante, tendo em vista que estava visando uma carreira como <em>Fullstack Developer</em>.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/569/0*JHgVIe91Ai8tRUkM.png\"></figure><p>Confesso que, de inicio, subestimei a relev\u00e2ncia dessa pratica em detrimento do abordagem Fullstack, \u201cDeve ser apenas uma \u2018Trend\u2019 mas no geral ser tudo a mesma coisa\u201d, felizmente eu estava enganado.</p>\n<p>Aprofundando nesse novo conceito, percebi <em>primeiramente o qu\u00e3o </em><strong><em>rookie </em></strong><em>eu sou como desenvolvedor, </em>mas segundamente um novo caminho para a minha especializa\u00e7\u00e3o e plano de carreira.</p>\n<p>Na vis\u00e3o do Vinicius, o Fullstack Developer \u00e9 um profissional generalista que sabe <em>\u201cde tudo um pouco\u201d</em>, por outro lado, o Desenvolvedor Fullcycle tamb\u00e9m \u00e9 um generalista, por\u00e9m munido de ferramentas corretas para atuar em todo o Ciclo de Desenvolvimento do Software\u00a0(SDLC).</p>\n<h3>Responsabilidades de cada Desenvolvedor</h3>\n<p>Com o ferramental <em>e </em>infraestrutura<em> </em>apropriado, o Fullcyle consegue atuar com responsabilidade ampla em praticamente todas as fases do desenvolvimento de um produto, principalmente com automatiza\u00e7\u00e3o das necessidades b\u00e1sicas da constru\u00e7\u00e3o de solu\u00e7\u00f5es. <em>(como a configura\u00e7\u00e3o da cria\u00e7\u00e3o de um banco de dados em nuvem para um microservi\u00e7o, ou a obten\u00e7\u00e3o de m\u00e9tricas de monitoramento)</em></p>\n<p>Tendo contato com o <a href=\"https://netflixtechblog.com/full-cycle-developers-at-netflix-a08c31f83249?gi=beb608ceca71\">artigo</a> original produzido pela Netflix pude perceber o qu\u00e3o certo est\u00e1 essa afirma\u00e7\u00e3o!</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/714/0*0EDWBhAF2-8LJb2J.png\"></figure><h3>Full Cycle Developer</h3>\n<p>O termo foi cunhado no cen\u00e1rio da empresa Netflix no per\u00edodo entre 2012 e 2018, e prop\u00f5e, essencialmente, uma solu\u00e7\u00e3o para lacunas de comunica\u00e7\u00e3o entre equipes altamente especializadas (monodisciplinares) e segregadas pelas etapas de desenvolvimento de software. Sendo essas etapas; o design; comumente representada pela equipe de arquitetos e SWE\u2019s (Sofware Engineers), a etapa de desenvolvimento; representada pelos Front e Back-end Developers, a etapa de testes; representada pelos SWET\u2019s (Software Engineers in Test), a etapa de deploy, e opera\u00e7\u00f5es; representada por especialistas de publica\u00e7\u00e3o e infraestrutura, e o suporte da solu\u00e7\u00e3o, representada pelas centrais de atendimento ao\u00a0cliente.</p>\n<h3>Principais diferen\u00e7as do Fullcycle para o Fullstack</h3>\n<p>De acordo com os autores do artigo, o que diferencia os dois profissionais \u00e9 o foco em solu\u00e7\u00f5es automatizadas no lugar de abordagens manuais para manuten\u00e7\u00f5es nos \u2018stacks\u2019 do produto. Tanto o Fullstack quanto o Fullcycle agem ora como um Engenheiro de software (SWE), ora como um Engenheiro de testes (SWET), ou mesmo como um Engenheiro de Confiabilidade de Sites (SRE) no modelo da Google. Por\u00e9m dentre os dois, somente o \u00faltimo tem uma ideia completa de <strong>ownership</strong> pela solu\u00e7\u00e3o na equipe. O que mais diferencia o <strong>Fullcycle </strong>do<strong> </strong>Fullstack, \u00e9 o uso de diversas tecnologias com prop\u00f3sito de agregar valor ao cliente e ao produto, <strong>de forma que a empresa ou outros colegas n\u00e3o criem depend\u00eancia no profissional</strong>.</p>\n<h3>Qual dos dois vale mais a\u00a0pena?</h3>\n<p>Pela alta rotatividade do mercado e principalmente pelo surgimento constante de novas tecnologias, qualquer especialista corre grande risco de obsolesc\u00eancia. Por isso \u00e9 necess\u00e1rio estar disposto a <strong>aprender variadas tecnologias e habilidades para manter-se relevante no mercado</strong>. Seja pela aud\u00e1cia do Fullstack, ou pelo prop\u00f3sito do Fullcycle, a multidisciplinaridade desses profissionais \u00e9 um ativo extremamente importante para o sucesso tanto de um produto, quanto de uma empresa como um todo.. Agora; eu sei qual deles eu pretendo me tornar, qual titulo voc\u00ea acha mais\u00a0justo?</p>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=c19b0959a1c2\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>Estava estudando na plataforma de cursos Alura quando me deparei com a <a href=\"https://www.alura.com.br/artigos/dev-full-cycle-o-que-e\">postagem do educador Vinicius Dias</a>, sobre o Fullcycle Developer. O titulo do artigo me intrigou bastante, tendo em vista que estava visando uma carreira como <em>Fullstack Developer</em>.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/569/0*JHgVIe91Ai8tRUkM.png\"></figure><p>Confesso que, de inicio, subestimei a relev\u00e2ncia dessa pratica em detrimento do abordagem Fullstack, \u201cDeve ser apenas uma \u2018Trend\u2019 mas no geral ser tudo a mesma coisa\u201d, felizmente eu estava enganado.</p>\n<p>Aprofundando nesse novo conceito, percebi <em>primeiramente o qu\u00e3o </em><strong><em>rookie </em></strong><em>eu sou como desenvolvedor, </em>mas segundamente um novo caminho para a minha especializa\u00e7\u00e3o e plano de carreira.</p>\n<p>Na vis\u00e3o do Vinicius, o Fullstack Developer \u00e9 um profissional generalista que sabe <em>\u201cde tudo um pouco\u201d</em>, por outro lado, o Desenvolvedor Fullcycle tamb\u00e9m \u00e9 um generalista, por\u00e9m munido de ferramentas corretas para atuar em todo o Ciclo de Desenvolvimento do Software\u00a0(SDLC).</p>\n<h3>Responsabilidades de cada Desenvolvedor</h3>\n<p>Com o ferramental <em>e </em>infraestrutura<em> </em>apropriado, o Fullcyle consegue atuar com responsabilidade ampla em praticamente todas as fases do desenvolvimento de um produto, principalmente com automatiza\u00e7\u00e3o das necessidades b\u00e1sicas da constru\u00e7\u00e3o de solu\u00e7\u00f5es. <em>(como a configura\u00e7\u00e3o da cria\u00e7\u00e3o de um banco de dados em nuvem para um microservi\u00e7o, ou a obten\u00e7\u00e3o de m\u00e9tricas de monitoramento)</em></p>\n<p>Tendo contato com o <a href=\"https://netflixtechblog.com/full-cycle-developers-at-netflix-a08c31f83249?gi=beb608ceca71\">artigo</a> original produzido pela Netflix pude perceber o qu\u00e3o certo est\u00e1 essa afirma\u00e7\u00e3o!</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/714/0*0EDWBhAF2-8LJb2J.png\"></figure><h3>Full Cycle Developer</h3>\n<p>O termo foi cunhado no cen\u00e1rio da empresa Netflix no per\u00edodo entre 2012 e 2018, e prop\u00f5e, essencialmente, uma solu\u00e7\u00e3o para lacunas de comunica\u00e7\u00e3o entre equipes altamente especializadas (monodisciplinares) e segregadas pelas etapas de desenvolvimento de software. Sendo essas etapas; o design; comumente representada pela equipe de arquitetos e SWE\u2019s (Sofware Engineers), a etapa de desenvolvimento; representada pelos Front e Back-end Developers, a etapa de testes; representada pelos SWET\u2019s (Software Engineers in Test), a etapa de deploy, e opera\u00e7\u00f5es; representada por especialistas de publica\u00e7\u00e3o e infraestrutura, e o suporte da solu\u00e7\u00e3o, representada pelas centrais de atendimento ao\u00a0cliente.</p>\n<h3>Principais diferen\u00e7as do Fullcycle para o Fullstack</h3>\n<p>De acordo com os autores do artigo, o que diferencia os dois profissionais \u00e9 o foco em solu\u00e7\u00f5es automatizadas no lugar de abordagens manuais para manuten\u00e7\u00f5es nos \u2018stacks\u2019 do produto. Tanto o Fullstack quanto o Fullcycle agem ora como um Engenheiro de software (SWE), ora como um Engenheiro de testes (SWET), ou mesmo como um Engenheiro de Confiabilidade de Sites (SRE) no modelo da Google. Por\u00e9m dentre os dois, somente o \u00faltimo tem uma ideia completa de <strong>ownership</strong> pela solu\u00e7\u00e3o na equipe. O que mais diferencia o <strong>Fullcycle </strong>do<strong> </strong>Fullstack, \u00e9 o uso de diversas tecnologias com prop\u00f3sito de agregar valor ao cliente e ao produto, <strong>de forma que a empresa ou outros colegas n\u00e3o criem depend\u00eancia no profissional</strong>.</p>\n<h3>Qual dos dois vale mais a\u00a0pena?</h3>\n<p>Pela alta rotatividade do mercado e principalmente pelo surgimento constante de novas tecnologias, qualquer especialista corre grande risco de obsolesc\u00eancia. Por isso \u00e9 necess\u00e1rio estar disposto a <strong>aprender variadas tecnologias e habilidades para manter-se relevante no mercado</strong>. Seja pela aud\u00e1cia do Fullstack, ou pelo prop\u00f3sito do Fullcycle, a multidisciplinaridade desses profissionais \u00e9 um ativo extremamente importante para o sucesso tanto de um produto, quanto de uma empresa como um todo.. Agora; eu sei qual deles eu pretendo me tornar, qual titulo voc\u00ea acha mais\u00a0justo?</p>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar\u00a0:-\u00a0)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=c19b0959a1c2\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["full-cycle-developer","essay"]},{"title":"O que e para qu\u00ea \u00e9 o Xamarin?","pubDate":"2022-04-22 08:51:34","link":"https://medium.com/@jackson.pires.rm/o-que-e-para-qu%C3%AA-%C3%A9-o-xamarin-6bad77285e01?source=rss-2b66cd090f51------2","guid":"https://medium.com/p/6bad77285e01","author":"Jackson Pires Ramalho","thumbnail":"https://cdn-images-1.medium.com/max/700/0*Kuy8PVJebeFGvNLE.png","description":"\n<h3>Como essa tecnologia se compara com React, Flutter e\u00a0Ionic?</h3>\n<p><strong>Xamarin</strong>, assim como o React Native, Ionic, Native-Script e muitas outras <em>frameworks,</em> \u00e9 um conjunto de t\u00e9cnicas para desenvolvimento mobile Cross-Platform. Sua premissa \u00e9 conseguir, com uma s\u00f3 <em>code base</em>, compilar sem dificuldade para <strong>diversas </strong>plataformas.</p>\n<p>A empresa Xamarin foi fundada em 2011 pelos engenheiros Jason Smith (criador do Xamarin Forms), Nat Friedman e Michael Icaza, do projeto <a href=\"https://www.mono-project.com/\"><strong>Mono</strong></a><strong>, </strong>para execu\u00e7\u00e3o de c\u00f3digo C# em multiplataforma, como uma solu\u00e7\u00e3o para a compila\u00e7\u00e3o e interoperabilidade de\u00a0c\u00f3digo.</p>\n<p><strong>Objetivo</strong></p>\n<p>O Xamarin tem o prop\u00f3sito de permitir o desenvolvimento de aplicativos nativos para Android, IOS e Windows Phone (tamb\u00e9m para Linux, MacOS, Solaris, e para consoles) com o uso da linguagem C# e do ambiente\u00a0.NET.</p>\n<p><strong>Usos do\u00a0Xamarin:</strong></p>\n<p>Com <strong><em>Xamarin.Android</em></strong>, configuramos o c\u00f3digo\u00a0.NET para executar lado-a-lado com o ART (Android Runtime), que \u00e9 compilado ao iniciar a aplica\u00e7\u00e3o (compila\u00e7\u00e3o JIT, ou Just-In-Time). A aplica\u00e7\u00e3o cont\u00e9m la\u00e7os\u00a0.Net para os <em>namespaces </em>Android e\u00a0Java.</p>\n<p>No<strong> <em>Xamarin.IOS</em> </strong>as aplica\u00e7\u00f5es s\u00e3o compiladas <em>Ahead-of-Time</em> (AOT) para o c\u00f3digo de<em> arquitetura ARM</em>, e estabelece la\u00e7os entre<em> Objective-C</em> e o <em>C#</em>, permitindo que os dois se comuniquem.</p>\n<p><strong>Xamarin.Mac</strong> tamb\u00e9m \u00e9 uma realidade para<em> </em>desenvolvedores da\u00a0ma\u00e7\u00e3<em>.</em></p>\n<p><strong>Xamarin.Essentials</strong> \u00e9 uma abstra\u00e7\u00e3o multiplataforma que fornece acesso simples a fun\u00e7\u00f5es nativas,\u00a0como:</p>\n<ul>\n<li>Informa\u00e7\u00f5es do dispositivo</li>\n<li>Sistema de\u00a0arquivos</li>\n<li>Aceler\u00f4metro</li>\n<li>Discagem</li>\n<li>Texto-para-fala</li>\n<li>Trava de\u00a0tela</li>\n</ul>\n<p>E por \u00faltimo, com<strong> <em>Xamarin.Forms</em></strong> \u00e9 poss\u00edvel desenvolver a interface das aplica\u00e7\u00f5es de forma centralizada, com apenas uma base de c\u00f3digo Front-end e com Back-end em C#.<br><strong><em>Xamarin.Forms</em></strong>, apesar de ser uma solu\u00e7\u00e3o mais limitada (pela necessidade de ser consistente em sistemas diferentes com o mesmo c\u00f3digo) possui diversas op\u00e7\u00f5es de estilos, efeitos e gestos para que as aplica\u00e7\u00f5es finais sejam elegantes e agrad\u00e1veis.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/700/0*Kuy8PVJebeFGvNLE.png\"></figure><p><strong>Beneficios do\u00a0Xamarin:</strong></p>\n<p>Os benef\u00edcios da utiliza\u00e7\u00e3o do <strong><em>Xamarin </em></strong>em projetos de software, surgem com a natureza da <em>linguagem h\u00edbrida</em></p>\n<blockquote><em>\u201cApenas uma tecnologia, v\u00e1rias distribui\u00e7\u00f5es\u201d</em></blockquote>\n<p>O que torna o desenvolvimento de sistemas multiplataforma muito mais rent\u00e1vel, pois n\u00e3o se faz necess\u00e1rio o envolvimento de m\u00faltiplas equipes e habilidades no mesmo\u00a0projeto.</p>\n<p>Outro benef\u00edcio surge pela utiliza\u00e7\u00e3o da linguagem C# em detrimento de uma linguagem pr\u00f3pria (<em>como \u00e9 o caso do Kotlin, por exemplo</em>), o que garante uma interoperabilidade entre a solu\u00e7\u00e3o desenvolvida em <strong>Xamarin </strong>e outros poss\u00edveis projetos da equipe, facilitando a reutiliza\u00e7\u00e3o de c\u00f3digo e da base de conhecimento.</p>\n<blockquote><em>No fim, a escolha pela tecnologia de compila\u00e7\u00e3o para nativo depende da experi\u00eancia da\u00a0equipe.</em></blockquote>\n<p>Caso os desenvolvedores tenham mais experi\u00eancia com\u00a0.Net, a escolha por <strong>Xamarin </strong>pode prevalecer. Caso tenham mais conhecimento em Angular ou React, as solu\u00e7\u00f5es <strong>React Native</strong>, <strong>Native Script</strong> e <strong>Ionic</strong> podem ser mais atraentes.</p>\n<p><strong>Quais as plataformas em que se pode desenvolver com essa tecnologia, e qual \u00e9 a\u00a0ideal?</strong></p>\n<p>Por motivos relacionados a aquisi\u00e7\u00e3o da <strong>Xamarin </strong>pela Microsoft, o principal ambiente de desenvolvimento para Xamarin \u00e9 o <strong>Visual Studio</strong>, que recebe uma carga de trabalho para desenvolvimento Mobile envolvendo o Xamarin com uma solu\u00e7\u00e3o de cria\u00e7\u00e3o de interfaces e virtualiza\u00e7\u00e3o a exemplo do <em>Android\u00a0Studio</em>.</p>\n<blockquote><em>A plataforma ideal depende do sistema operacional.</em></blockquote>\n<p>No Windows, a principal plataforma de desenvolvimento \u00e9 o<strong> Visual Studio</strong>, j\u00e1 no Linux passa a ser o <strong><em>MonoDevelop</em></strong>.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/700/0*ruxIUgDQIhSiAJKp.png\"></figure><p><strong>Como essa plataforma de desenvolvimento h\u00edbrido se compara com as Frameworks JavaScript da atualidade?</strong></p>\n<p>A ideia da <em>cross-compatibilidade</em> de c\u00f3digo<em>\u00a0.Net</em> surgiu com a introdu\u00e7\u00e3o do<em>\u00a0.Net Framework</em> nos anos 2000, com o lan\u00e7amento da linguagem <em>C#</em>, o que propulsionou o desenvolvimento de tecnologias como o <em>Mono</em> e posteriormente o\u00a0<strong>Xamarin</strong>.</p>\n<p>A tecnologia foi apresentada em 2011 e em seguida foi adquirida (ap\u00f3s cinco anos) pela <strong>Microsoft</strong>. Nesse tempo, a tecnologia ganhou bastante popularidade e se manteve est\u00e1vel nos \u00edndices de uso, com aproximadamente <strong>1.6 milh\u00f5es de desenvolvedores ativos por ano</strong>. <em>(</em><a href=\"https://towardsdatascience.com/flutter-vs-react-native-vs-xamarin-which-is-the-best-choice-for-2019-2bc30fc76442\"><em>TowarsDataScience\u200a\u2014\u200aFlutter x ReactNative x\u00a0Xamarin</em></a><em>)</em></p>\n<p><strong>Em 2016</strong>, surge a Framework <strong>React Native</strong>, desenvolvida pela equipe do <em>Facebook</em>, que dominou grande parte do mercado, e<strong> </strong><em>ultrapassou pela primeira vez o Xamarin</em>. Nesse per\u00edodo o mesmo seguiu um padr\u00e3o de estagna\u00e7\u00e3o, e <strong>perdeu popularidade</strong> e opini\u00e3o do p\u00fablico <strong>para tecnologias recentes </strong>baseadas em linguagens pouco tipadas, como pr\u00f3prio <em>React Native</em>, <em>Flutter</em>, <em>Ionic </em>e <em>Native\u00a0script</em>.</p>\n<p>Em quest\u00e3o de performance, o Xamarin \u00e9 compar\u00e1vel com aplica\u00e7\u00f5es nativas, e tem alta performance. Perde apenas para o <strong>Flutter</strong>, que<strong> consegue ter uma velocidade de processamento superior </strong>utilizando a linguagem pr\u00f3pria <strong>(Dart) </strong>ao inv\u00e9s de Javascript.</p>\n<p>Apesar de sua enorme robustez, potencializada pela capacidade de f\u00e1cil implementa\u00e7\u00e3o de c\u00f3digo de outras linguagens <em>(fun\u00e7\u00f5es como: edi\u00e7\u00e3o de v\u00eddeo e imagens) </em><strong>aplica\u00e7\u00f5es baseadas React Native tendem a ter menor performance.</strong></p>\n<p><strong>Em rela\u00e7\u00e3o a disponibilidade de material de refer\u00eancia e suporte</strong>, <em>Xamarin </em><strong>possui maior conte\u00fado do que linguagens recentes</strong>, mais especificamente o React Native. Seguido do <strong>Xamarin </strong>\u00e9 ele o segundo maior termo de busca, o terceiro sendo <strong>Native\u00a0Script</strong>.</p>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar o quanto voc\u00ea gostou\u00a0:)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=6bad77285e01\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>Como essa tecnologia se compara com React, Flutter e\u00a0Ionic?</h3>\n<p><strong>Xamarin</strong>, assim como o React Native, Ionic, Native-Script e muitas outras <em>frameworks,</em> \u00e9 um conjunto de t\u00e9cnicas para desenvolvimento mobile Cross-Platform. Sua premissa \u00e9 conseguir, com uma s\u00f3 <em>code base</em>, compilar sem dificuldade para <strong>diversas </strong>plataformas.</p>\n<p>A empresa Xamarin foi fundada em 2011 pelos engenheiros Jason Smith (criador do Xamarin Forms), Nat Friedman e Michael Icaza, do projeto <a href=\"https://www.mono-project.com/\"><strong>Mono</strong></a><strong>, </strong>para execu\u00e7\u00e3o de c\u00f3digo C# em multiplataforma, como uma solu\u00e7\u00e3o para a compila\u00e7\u00e3o e interoperabilidade de\u00a0c\u00f3digo.</p>\n<p><strong>Objetivo</strong></p>\n<p>O Xamarin tem o prop\u00f3sito de permitir o desenvolvimento de aplicativos nativos para Android, IOS e Windows Phone (tamb\u00e9m para Linux, MacOS, Solaris, e para consoles) com o uso da linguagem C# e do ambiente\u00a0.NET.</p>\n<p><strong>Usos do\u00a0Xamarin:</strong></p>\n<p>Com <strong><em>Xamarin.Android</em></strong>, configuramos o c\u00f3digo\u00a0.NET para executar lado-a-lado com o ART (Android Runtime), que \u00e9 compilado ao iniciar a aplica\u00e7\u00e3o (compila\u00e7\u00e3o JIT, ou Just-In-Time). A aplica\u00e7\u00e3o cont\u00e9m la\u00e7os\u00a0.Net para os <em>namespaces </em>Android e\u00a0Java.</p>\n<p>No<strong> <em>Xamarin.IOS</em> </strong>as aplica\u00e7\u00f5es s\u00e3o compiladas <em>Ahead-of-Time</em> (AOT) para o c\u00f3digo de<em> arquitetura ARM</em>, e estabelece la\u00e7os entre<em> Objective-C</em> e o <em>C#</em>, permitindo que os dois se comuniquem.</p>\n<p><strong>Xamarin.Mac</strong> tamb\u00e9m \u00e9 uma realidade para<em> </em>desenvolvedores da\u00a0ma\u00e7\u00e3<em>.</em></p>\n<p><strong>Xamarin.Essentials</strong> \u00e9 uma abstra\u00e7\u00e3o multiplataforma que fornece acesso simples a fun\u00e7\u00f5es nativas,\u00a0como:</p>\n<ul>\n<li>Informa\u00e7\u00f5es do dispositivo</li>\n<li>Sistema de\u00a0arquivos</li>\n<li>Aceler\u00f4metro</li>\n<li>Discagem</li>\n<li>Texto-para-fala</li>\n<li>Trava de\u00a0tela</li>\n</ul>\n<p>E por \u00faltimo, com<strong> <em>Xamarin.Forms</em></strong> \u00e9 poss\u00edvel desenvolver a interface das aplica\u00e7\u00f5es de forma centralizada, com apenas uma base de c\u00f3digo Front-end e com Back-end em C#.<br><strong><em>Xamarin.Forms</em></strong>, apesar de ser uma solu\u00e7\u00e3o mais limitada (pela necessidade de ser consistente em sistemas diferentes com o mesmo c\u00f3digo) possui diversas op\u00e7\u00f5es de estilos, efeitos e gestos para que as aplica\u00e7\u00f5es finais sejam elegantes e agrad\u00e1veis.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/700/0*Kuy8PVJebeFGvNLE.png\"></figure><p><strong>Beneficios do\u00a0Xamarin:</strong></p>\n<p>Os benef\u00edcios da utiliza\u00e7\u00e3o do <strong><em>Xamarin </em></strong>em projetos de software, surgem com a natureza da <em>linguagem h\u00edbrida</em></p>\n<blockquote><em>\u201cApenas uma tecnologia, v\u00e1rias distribui\u00e7\u00f5es\u201d</em></blockquote>\n<p>O que torna o desenvolvimento de sistemas multiplataforma muito mais rent\u00e1vel, pois n\u00e3o se faz necess\u00e1rio o envolvimento de m\u00faltiplas equipes e habilidades no mesmo\u00a0projeto.</p>\n<p>Outro benef\u00edcio surge pela utiliza\u00e7\u00e3o da linguagem C# em detrimento de uma linguagem pr\u00f3pria (<em>como \u00e9 o caso do Kotlin, por exemplo</em>), o que garante uma interoperabilidade entre a solu\u00e7\u00e3o desenvolvida em <strong>Xamarin </strong>e outros poss\u00edveis projetos da equipe, facilitando a reutiliza\u00e7\u00e3o de c\u00f3digo e da base de conhecimento.</p>\n<blockquote><em>No fim, a escolha pela tecnologia de compila\u00e7\u00e3o para nativo depende da experi\u00eancia da\u00a0equipe.</em></blockquote>\n<p>Caso os desenvolvedores tenham mais experi\u00eancia com\u00a0.Net, a escolha por <strong>Xamarin </strong>pode prevalecer. Caso tenham mais conhecimento em Angular ou React, as solu\u00e7\u00f5es <strong>React Native</strong>, <strong>Native Script</strong> e <strong>Ionic</strong> podem ser mais atraentes.</p>\n<p><strong>Quais as plataformas em que se pode desenvolver com essa tecnologia, e qual \u00e9 a\u00a0ideal?</strong></p>\n<p>Por motivos relacionados a aquisi\u00e7\u00e3o da <strong>Xamarin </strong>pela Microsoft, o principal ambiente de desenvolvimento para Xamarin \u00e9 o <strong>Visual Studio</strong>, que recebe uma carga de trabalho para desenvolvimento Mobile envolvendo o Xamarin com uma solu\u00e7\u00e3o de cria\u00e7\u00e3o de interfaces e virtualiza\u00e7\u00e3o a exemplo do <em>Android\u00a0Studio</em>.</p>\n<blockquote><em>A plataforma ideal depende do sistema operacional.</em></blockquote>\n<p>No Windows, a principal plataforma de desenvolvimento \u00e9 o<strong> Visual Studio</strong>, j\u00e1 no Linux passa a ser o <strong><em>MonoDevelop</em></strong>.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/700/0*ruxIUgDQIhSiAJKp.png\"></figure><p><strong>Como essa plataforma de desenvolvimento h\u00edbrido se compara com as Frameworks JavaScript da atualidade?</strong></p>\n<p>A ideia da <em>cross-compatibilidade</em> de c\u00f3digo<em>\u00a0.Net</em> surgiu com a introdu\u00e7\u00e3o do<em>\u00a0.Net Framework</em> nos anos 2000, com o lan\u00e7amento da linguagem <em>C#</em>, o que propulsionou o desenvolvimento de tecnologias como o <em>Mono</em> e posteriormente o\u00a0<strong>Xamarin</strong>.</p>\n<p>A tecnologia foi apresentada em 2011 e em seguida foi adquirida (ap\u00f3s cinco anos) pela <strong>Microsoft</strong>. Nesse tempo, a tecnologia ganhou bastante popularidade e se manteve est\u00e1vel nos \u00edndices de uso, com aproximadamente <strong>1.6 milh\u00f5es de desenvolvedores ativos por ano</strong>. <em>(</em><a href=\"https://towardsdatascience.com/flutter-vs-react-native-vs-xamarin-which-is-the-best-choice-for-2019-2bc30fc76442\"><em>TowarsDataScience\u200a\u2014\u200aFlutter x ReactNative x\u00a0Xamarin</em></a><em>)</em></p>\n<p><strong>Em 2016</strong>, surge a Framework <strong>React Native</strong>, desenvolvida pela equipe do <em>Facebook</em>, que dominou grande parte do mercado, e<strong> </strong><em>ultrapassou pela primeira vez o Xamarin</em>. Nesse per\u00edodo o mesmo seguiu um padr\u00e3o de estagna\u00e7\u00e3o, e <strong>perdeu popularidade</strong> e opini\u00e3o do p\u00fablico <strong>para tecnologias recentes </strong>baseadas em linguagens pouco tipadas, como pr\u00f3prio <em>React Native</em>, <em>Flutter</em>, <em>Ionic </em>e <em>Native\u00a0script</em>.</p>\n<p>Em quest\u00e3o de performance, o Xamarin \u00e9 compar\u00e1vel com aplica\u00e7\u00f5es nativas, e tem alta performance. Perde apenas para o <strong>Flutter</strong>, que<strong> consegue ter uma velocidade de processamento superior </strong>utilizando a linguagem pr\u00f3pria <strong>(Dart) </strong>ao inv\u00e9s de Javascript.</p>\n<p>Apesar de sua enorme robustez, potencializada pela capacidade de f\u00e1cil implementa\u00e7\u00e3o de c\u00f3digo de outras linguagens <em>(fun\u00e7\u00f5es como: edi\u00e7\u00e3o de v\u00eddeo e imagens) </em><strong>aplica\u00e7\u00f5es baseadas React Native tendem a ter menor performance.</strong></p>\n<p><strong>Em rela\u00e7\u00e3o a disponibilidade de material de refer\u00eancia e suporte</strong>, <em>Xamarin </em><strong>possui maior conte\u00fado do que linguagens recentes</strong>, mais especificamente o React Native. Seguido do <strong>Xamarin </strong>\u00e9 ele o segundo maior termo de busca, o terceiro sendo <strong>Native\u00a0Script</strong>.</p>\n<p><strong><em>Gostou deste post? clique no</em>\ud83d\udc4f <em>bot\u00e3o abaixo para mostrar o quanto voc\u00ea gostou\u00a0:)</em></strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=6bad77285e01\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["xamarin","essay","mobile"]}]}